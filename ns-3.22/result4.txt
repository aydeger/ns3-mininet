Script started on Mon 26 Sep 2016 07:33:27 PM EDT
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# exitpython scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0xf7ba80)
CsmaNetDevice:SetMtu(0xf7ba80, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xd06590)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356500)
CsmaNetDevice:SetQueue(0xf7bcf0)
CsmaNetDevice:Attach(0xf7ba80, 0x7ffc2d3565b0)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0xf7be20)
CsmaNetDevice:SetMtu(0xf7be20, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf7b4d0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356500)
CsmaNetDevice:SetQueue(0xf7c3a0)
CsmaNetDevice:Attach(0xf7be20, 0x7ffc2d3565b0)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0xf7ca40)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
ArpL3Protocol:SetNode(0xf7ca40, 0xd06590)
Ipv4L3Protocol:Ipv4L3Protocol(0xf7cca0)
Ipv4L3Protocol:SetIpForward(0xf7cca0, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf7cca0, 1)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
Ipv4L3Protocol:SetNode(0xf7cca0, 0xd06590)
Ipv4L3Protocol:SetupLoopback(0xf7cca0)
Ipv4L3Protocol:AddIpv4Interface(0xf7cca0, 0xf7c490)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf7ce70)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Icmpv4L4Protocol:SetNode(0xf7ce70, 0xd06590)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Icmpv4L4Protocol:SetDownTarget(0xf7ce70, 0x7ffc2d3564d0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:SetRoutingProtocol(0xf7cca0, 0xf7c5d0)
Ipv4L3Protocol:GetNInterfaces(0xf7cca0)
Ipv4L3Protocol:IsUp(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNInterfaces(0xf7cca0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7df90)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7df20)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
ArpL3Protocol:ArpL3Protocol(0xf7d900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
ArpL3Protocol:SetNode(0xf7d900, 0xf7b4d0)
Ipv4L3Protocol:Ipv4L3Protocol(0xf7e900)
Ipv4L3Protocol:SetIpForward(0xf7e900, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf7e900, 1)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
Ipv4L3Protocol:SetNode(0xf7e900, 0xf7b4d0)
Ipv4L3Protocol:SetupLoopback(0xf7e900)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xf7e040)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf7eb10)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Icmpv4L4Protocol:SetNode(0xf7eb10, 0xf7b4d0)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Icmpv4L4Protocol:SetDownTarget(0xf7eb10, 0x7ffc2d3564d0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:SetRoutingProtocol(0xf7e900, 0xf7e280)
Ipv4L3Protocol:GetNInterfaces(0xf7e900)
Ipv4L3Protocol:IsUp(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNInterfaces(0xf7e900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7fbd0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7fb60)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7cca0, 0xf7ba80)
Ipv4L3Protocol:AddInterface(0xf7cca0, 0xf7ba80)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf7ca40, 0xf7ba80, 0xf7fc80)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc2d356450)
Ipv4L3Protocol:AddIpv4Interface(0xf7cca0, 0xf7fc80)
Ipv4L3Protocol:AddAddress(0xf7cca0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:IsUp(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:SetMetric(0xf7cca0, 1, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:SetUp(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:AddInterface(0xf7e900, 0xf7be20)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf7d900, 0xf7be20, 0xf80db0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc2d356450)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xf80db0)
Ipv4L3Protocol:AddAddress(0xf7e900, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:IsUp(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:SetMetric(0xf7e900, 1, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:SetUp(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf7cca0)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356060)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffc2d356060)
CsmaNetDevice:CsmaNetDevice(0xf92650)
CsmaNetDevice:SetMtu(0xf92650, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf922a0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356500)
CsmaNetDevice:SetQueue(0xf92880)
CsmaNetDevice:Attach(0xf92650, 0x7ffc2d3565b0)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0xf92950)
CsmaNetDevice:SetMtu(0xf92950, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf92330)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356500)
CsmaNetDevice:SetQueue(0xf92ea0)
CsmaNetDevice:Attach(0xf92950, 0x7ffc2d3565b0)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0xf93520)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
ArpL3Protocol:SetNode(0xf93520, 0xf922a0)
Ipv4L3Protocol:Ipv4L3Protocol(0xf93780)
Ipv4L3Protocol:SetIpForward(0xf93780, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf93780, 1)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
Ipv4L3Protocol:SetNode(0xf93780, 0xf922a0)
Ipv4L3Protocol:SetupLoopback(0xf93780)
Ipv4L3Protocol:AddIpv4Interface(0xf93780, 0xf92f70)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf93950)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Icmpv4L4Protocol:SetNode(0xf93950, 0xf922a0)
Ipv4L3Protocol:Insert(0xf93780, 0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Icmpv4L4Protocol:SetDownTarget(0xf93950, 0x7ffc2d3564d0)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:SetRoutingProtocol(0xf93780, 0xf930b0)
Ipv4L3Protocol:GetNInterfaces(0xf93780)
Ipv4L3Protocol:IsUp(0xf93780, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetNAddresses(0xf93780, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetAddress(0xf93780, 0, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetNAddresses(0xf93780, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 0)
Ipv4L3Protocol:GetNInterfaces(0xf93780)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:Insert(0xf93780, 0xf94a70)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
Ipv4L3Protocol:Insert(0xf93780, 0xf94a00)
Ipv4L3Protocol:NotifyNewAggregate(0xf93780)
ArpL3Protocol:NotifyNewAggregate(0xf93520)
Icmpv4L4Protocol:NotifyNewAggregate(0xf93950)
ArpL3Protocol:ArpL3Protocol(0xf943e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
ArpL3Protocol:SetNode(0xf943e0, 0xf92330)
Ipv4L3Protocol:Ipv4L3Protocol(0xf953e0)
Ipv4L3Protocol:SetIpForward(0xf953e0, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf953e0, 1)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
Ipv4L3Protocol:SetNode(0xf953e0, 0xf92330)
Ipv4L3Protocol:SetupLoopback(0xf953e0)
Ipv4L3Protocol:AddIpv4Interface(0xf953e0, 0xf94b20)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf955f0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Icmpv4L4Protocol:SetNode(0xf955f0, 0xf92330)
Ipv4L3Protocol:Insert(0xf953e0, 0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Icmpv4L4Protocol:SetDownTarget(0xf955f0, 0x7ffc2d3564d0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:SetRoutingProtocol(0xf953e0, 0xf94d60)
Ipv4L3Protocol:GetNInterfaces(0xf953e0)
Ipv4L3Protocol:IsUp(0xf953e0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetAddress(0xf953e0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 0)
Ipv4L3Protocol:GetNInterfaces(0xf953e0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:Insert(0xf953e0, 0xf966b0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
Ipv4L3Protocol:Insert(0xf953e0, 0xf96640)
Ipv4L3Protocol:NotifyNewAggregate(0xf953e0)
ArpL3Protocol:NotifyNewAggregate(0xf943e0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf955f0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf93780, 0xf92650)
Ipv4L3Protocol:AddInterface(0xf93780, 0xf92650)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf93520, 0xf92650, 0xf96760)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc2d356450)
Ipv4L3Protocol:AddIpv4Interface(0xf93780, 0xf96760)
Ipv4L3Protocol:AddAddress(0xf93780, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:IsUp(0xf93780, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:SetMetric(0xf93780, 1, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:SetUp(0xf93780, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf93780, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetNAddresses(0xf93780, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf953e0, 0xf92950)
Ipv4L3Protocol:AddInterface(0xf953e0, 0xf92950)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf943e0, 0xf92950, 0xf97590)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc2d356450)
Ipv4L3Protocol:AddIpv4Interface(0xf953e0, 0xf97590)
Ipv4L3Protocol:AddAddress(0xf953e0, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:IsUp(0xf953e0, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:SetMetric(0xf953e0, 1, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:SetUp(0xf953e0, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf953e0, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf93780)
Ipv4L3Protocol:GetAddress(0xf953e0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf953e0)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffc2d356060)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffc2d356060)
ArpL3Protocol:ArpL3Protocol(0xf93050)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
ArpL3Protocol:SetNode(0xf93050, 0xfa8940)
Ipv4L3Protocol:Ipv4L3Protocol(0xfa8b90)
Ipv4L3Protocol:SetIpForward(0xfa8b90, 1)
Ipv4L3Protocol:SetWeakEsModel(0xfa8b90, 1)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
Ipv4L3Protocol:SetNode(0xfa8b90, 0xfa8940)
Ipv4L3Protocol:SetupLoopback(0xfa8b90)
Ipv4L3Protocol:AddIpv4Interface(0xfa8b90, 0xf92550)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf7a9b0)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Icmpv4L4Protocol:SetNode(0xf7a9b0, 0xfa8940)
Ipv4L3Protocol:Insert(0xfa8b90, 0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Icmpv4L4Protocol:SetDownTarget(0xf7a9b0, 0x7ffc2d3564e0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:SetRoutingProtocol(0xfa8b90, 0xf96920)
Ipv4L3Protocol:GetNInterfaces(0xfa8b90)
Ipv4L3Protocol:IsUp(0xfa8b90, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 0, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 0)
Ipv4L3Protocol:GetNInterfaces(0xfa8b90)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:Insert(0xfa8b90, 0xfa9cf0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:Insert(0xfa8b90, 0xfa9f60)
Ipv4L3Protocol:NotifyNewAggregate(0xfa8b90)
ArpL3Protocol:NotifyNewAggregate(0xf93050)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7a9b0)
Ipv4L3Protocol:GetInterfaceForDevice(0xfa8b90, 0xfaa6a0)
Ipv4L3Protocol:AddInterface(0xfa8b90, 0xfaa6a0)
Ipv4L3Protocol:AddIpv4Interface(0xfa8b90, 0xfa9da0)
Ipv4L3Protocol:AddAddress(0xfa8b90, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:IsUp(0xfa8b90, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:SetMetric(0xfa8b90, 1, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:SetUp(0xfa8b90, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
ArpL3Protocol:ArpL3Protocol(0xfae850)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
ArpL3Protocol:SetNode(0xfae850, 0xfab180)
Ipv4L3Protocol:Ipv4L3Protocol(0xfaed30)
Ipv4L3Protocol:SetIpForward(0xfaed30, 1)
Ipv4L3Protocol:SetWeakEsModel(0xfaed30, 1)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
Ipv4L3Protocol:SetNode(0xfaed30, 0xfab180)
Ipv4L3Protocol:SetupLoopback(0xfaed30)
Ipv4L3Protocol:AddIpv4Interface(0xfaed30, 0xfadc30)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xfaea20)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Icmpv4L4Protocol:SetNode(0xfaea20, 0xfab180)
Ipv4L3Protocol:Insert(0xfaed30, 0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Icmpv4L4Protocol:SetDownTarget(0xfaea20, 0x7ffc2d355a40)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:SetRoutingProtocol(0xfaed30, 0xfae5f0)
Ipv4L3Protocol:GetNInterfaces(0xfaed30)
Ipv4L3Protocol:IsUp(0xfaed30, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetNAddresses(0xfaed30, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetAddress(0xfaed30, 0, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetNAddresses(0xfaed30, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 0)
Ipv4L3Protocol:GetNInterfaces(0xfaed30)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:Insert(0xfaed30, 0xfaffe0)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:Insert(0xfaed30, 0xfaff70)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:GetInterfaceForDevice(0xfaed30, 0xfb0960)
Ipv4L3Protocol:AddInterface(0xfaed30, 0xfb0960)
Ipv4L3Protocol:AddIpv4Interface(0xfaed30, 0xfb1320)
Ipv4L3Protocol:AddAddress(0xfaed30, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:IsUp(0xfaed30, 1)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:SetMetric(0xfaed30, 1, 1)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:SetUp(0xfaed30, 1)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetNAddresses(0xfaed30, 1)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetNAddresses(0xfaed30, 1)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0xfa8b90, 0xfb0c50)
Ipv4L3Protocol:AddInterface(0xfa8b90, 0xfb0c50)
Ipv4L3Protocol:AddIpv4Interface(0xfa8b90, 0xfb17a0)
Ipv4L3Protocol:AddAddress(0xfa8b90, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:IsUp(0xfa8b90, 2)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:SetMetric(0xfa8b90, 2, 1)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:SetUp(0xfa8b90, 2)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 2)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetNAddresses(0xfa8b90, 2)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:GetAddress(0xfaed30, 1, 0)
Ipv4L3Protocol:GetInterface(0xfaed30, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 2, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 2)
Ipv4L3Protocol:NotifyNewAggregate(0xfaed30)
ArpL3Protocol:NotifyNewAggregate(0xfae850)
Icmpv4L4Protocol:NotifyNewAggregate(0xfaea20)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xfb4ad0)
Ipv4L3Protocol:AddInterface(0xf7e900, 0xfb4ad0)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xfb83b0)
Ipv4L3Protocol:AddAddress(0xf7e900, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:IsUp(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:SetMetric(0xf7e900, 2, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:SetUp(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf953e0, 0xfb7d10)
Ipv4L3Protocol:AddInterface(0xf953e0, 0xfb7d10)
Ipv4L3Protocol:AddIpv4Interface(0xf953e0, 0xfb8600)
Ipv4L3Protocol:AddAddress(0xf953e0, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:IsUp(0xf953e0, 2)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:SetMetric(0xf953e0, 2, 1)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:SetUp(0xf953e0, 2)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 2)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 2)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0xf953e0)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Ipv4L3Protocol:GetAddress(0xfa8b90, 1, 0)
Ipv4L3Protocol:GetInterface(0xfa8b90, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
Ipv4L3Protocol:GetRoutingProtocol(0xf7cca0)
Ipv4L3Protocol:GetRoutingProtocol(0xf953e0)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xfb4ad0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf953e0, 0xfb7d10)
Ipv4L3Protocol:GetNAddresses(0xf953e0, 2)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
Ipv4L3Protocol:GetAddress(0xf953e0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf953e0, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7cca0, 0xf7ba80)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf93780, 0xf92650)
Ipv4L3Protocol:GetNAddresses(0xf93780, 1)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
Ipv4L3Protocol:GetAddress(0xf93780, 1, 0)
Ipv4L3Protocol:GetInterface(0xf93780, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f40015d0
UID is 0)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4002910, 0xf7ba80)
UID is 0
CsmaNetDevice:Receive(0x7fc5f4003f20, 0xf7ba80)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4003f20, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4003f20
UID is 1)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4003f20, 62:7b:d2:e2:99:09, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4002910, 0xf92650)
UID is 1
CsmaNetDevice:Receive(0x7fc5f4003f90, 0xf92650)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4015170, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4015170, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4015170
UID is 2)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4015170, aa:04:25:10:a4:2c, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4015170
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4015170
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 2
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()




*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7fc5f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4025950
UID is 3)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, 62:7b:d2:e2:99:09, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4003f20, 0xf92650)
UID is 3
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf92650)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-33:33:ff:e2:99:09, 34525)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:ff:e2:99:09, 34525)
packet =0x7fc5f40015d0
UID is 4)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:ff:e2:99:09
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, 62:7b:d2:e2:99:09, 33:33:ff:e2:99:09, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf92650)
UID is 4
CsmaNetDevice:Receive(0x7fc5f4003f20, 0xf92650)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:ff:e2:99:09
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4003f20, 02-06-33:33:ff:10:a4:2c, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4003f20, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:ff:10:a4:2c, 34525)
packet =0x7fc5f4003f20
UID is 5)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:ff:10:a4:2c
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4003f20, aa:04:25:10:a4:2c, 33:33:ff:10:a4:2c, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4003f20
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4003f20
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf7ba80)
UID is 5
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:ff:10:a4:2c
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4025950
UID is 6)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, 62:7b:d2:e2:99:09, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf92650)
UID is 6
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf92650)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4015170, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4015170, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4015170
UID is 7)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4015170, aa:04:25:10:a4:2c, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4015170
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4015170
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4003f20, 0xf7ba80)
UID is 7
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4024690
UID is 8)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, 62:7b:d2:e2:99:09, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf92650)
UID is 8
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf92650)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f40015d0
UID is 9)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, 62:7b:d2:e2:99:09, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf92650)
UID is 9
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf92650)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4025950
UID is 10)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf7ba80)
UID is 10
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f4024690
UID is 11)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 11
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf7ba80)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4015170, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4015170, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4015170
UID is 12)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4015170, 62:7b:d2:e2:99:09, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4015170
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4015170
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf92650)
UID is 12
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf92650)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc5f4025950
UID is 13)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 13
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f40015d0
UID is 14)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, 62:7b:d2:e2:99:09, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf92650)
UID is 14
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf92650)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f4024690
UID is 15)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 15
CsmaNetDevice:Receive(0x7fc5f4015170, 0xf7ba80)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
ping [K[K[K[K[Kh1 pinCsmaNetDevice:Send(0x7fc5f4015170, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4015170, 02-06-62:7b:d2:e2:99:09, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f4015170
UID is 16)
Sending From : 02-06-62:7b:d2:e2:99:09 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4015170, 62:7b:d2:e2:99:09, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4015170
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4015170
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf92650)
UID is 16
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf92650)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 62:7b:d2:e2:99:09 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
gCsmaNetDevice:Send(0x7fc5f4025950, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc5f4025950
UID is 17)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 17
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
  
Usage: ping [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]
            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]
            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]
            [-w deadline] [-W timeout] [hop1 ...] destination
mininet> h1 ping[K[K[K[K[K[K[K
mininet> 
mininet> 
mininet> 
mininet> h1 ping 7.2.0.2
PING 7.2.0.2 (7.2.0.2) 56(84) bytes of data.
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 18)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 18
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 18)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 18
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 18
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 19)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 19
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 19)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 19
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 19
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 20)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 20
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 20)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 20
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 20
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 21)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 21
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 21)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 21
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 21
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 22)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 22
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 22)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 22
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 22
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 23)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 23
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 23)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 23
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 23
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 24)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 24
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 24)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 24
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 24
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 25)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 25
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 25)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 25
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 25
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 26)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 26
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 26)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 26
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 26
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 27)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 27
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 27)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 27
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 27
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 28)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 28
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 28)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 28
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 28
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 29)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 29
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 29)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 29
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 29
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 30)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 30
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 30)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 30
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 30
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 31)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 31
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 31)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 31
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 31
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 32)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 32
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 32)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 32
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 32
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 33)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 33
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 33)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 33
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 33
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 34)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 34
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 34)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 34
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 34
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 35)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 35
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 35)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 35
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 35
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f40015d0
UID is 36)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 36
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 36)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 36
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 36
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4024690
UID is 37)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 37
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 37)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 37
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 37
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()
^C
--- 7.2.0.2 ping statistics ---
20 packets transmitted, 0 received, 100% packet loss, time 18999ms

mininet> h1 -c1 ping 7.2.0.[K[K[K[K1.0.2
bash: -c1: command not found
mininet> h1 -c1 ping 7.1.0.2[C[C[1P[1P[1P[1P[Kh1 ping 7.1.0.2-7.1.0.2c7.1.0.217.1.0.2 7.1.0.2
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:02, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:02, 2048)
packet =0x7fc5f4025950
UID is 38)
Sending From : 02PING 7.1.0.2 (7.1.0.2) 56(84) bytes of data.
-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:02, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 38
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 38)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 38
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 38
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:02
CsmaNetDevice:GetAddress()
Ipv4L3Protocol:Receive(0xf7e900, 0xf7be20, 0x7fc5f40015d0, 2048, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:02, 0)
Packet from 02-06-aa:04:25:10:a4:2c received on node 1
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:IsDestinationAddress(0xf7e900, 7.1.0.2, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
For me (destination 7.1.0.2 match)
Ipv4L3Protocol:LocalDeliver(0xf7e900, 0x7fc5f4024840, 0x7fc5f8c53bb0, 1)
Ipv4L3Protocol:GetProtocol(0xf7e900, 1)
Icmpv4L4Protocol:GetProtocolNumber(0xf7eb10)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Icmpv4L4Protocol:Receive(0xf7eb10, 0x7fc5f40235e0, tos 0x0 DSCP Default ECN Not-ECT ttl 64 id 59041 protocol 1 offset (bytes) 0 flags [DF] length: 84 7.1.0.3 > 7.1.0.2, 0xf80db0)
Icmpv4L4Protocol:HandleEcho(0xf7eb10, 0x7fc5f40235e0, type=8, code=0, 7.1.0.3, 7.1.0.2)
Icmpv4L4Protocol:SendMessage(0xf7eb10, 0x7fc5f40259c0, 7.1.0.2, 7.1.0.3, 0, 0, 0)
Ipv4L3Protocol:Send(0xf7e900, 0x7fc5f40259c0, 7.1.0.2, 7.1.0.3, 1, 0)
Send From : 7.1.0.2 to : 7.1.0.310
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Testing address 7.1.0.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Testing address 7.0.0.2 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol::Send case 5:  passed in with no route 7.1.0.3
Ipv4L3Protocol:BuildHeader(0xf7e900, 7.1.0.2, 7.1.0.3, 1, 64, 64, 0, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNetDevice(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNetDevice(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:SendRealOut(0xf7e900, 0x7fc5f40261e0, 0x7fc5f4026960, 0x7fc5f8c53070)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
CsmaNetDevice:GetIfIndex()
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Send to destination 7.1.0.3
CsmaNetDevice:GetMtu()
CsmaNetDevice:NeedsArp()
ArpL3Protocol:Lookup(0xf7d900, 0x7fc5f4026960, 7.1.0.3, 0xf7be20, 0xf80e40, 0x7fc5f8c52950)
node=1, no entry for 7.1.0.3 -- send arp request
ArpL3Protocol:SendArpRequest(0xf7d900, 0xf80e40, 7.1.0.3)
Ipv4L3Protocol:SelectSourceAddress(0xf7e900, 0xf7be20, 7.1.0.3, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be20)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:GetAddress()
ARP: sending request from node 1 || src: 02-06-00:00:00:00:00:02 / 7.1.0.2 || dst: 02-06-ff:ff:ff:ff:ff:ff / 7.1.0.3
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:GetAddress()
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:Send(0x7fc5f40015d0, 02-06-ff:ff:ff:ff:ff:ff, 2054)
CsmaNetDevice:SendFrom(0x7fc5f40015d0, 02-06-00:00:00:00:00:02, 02-06-ff:ff:ff:ff:ff:ff, 2054)
packet =0x7fc5f40015d0
UID is 40)
Sending From : 02-06-00:00:00:00:00:02 To : 02-06-ff:ff:ff:ff:ff:ff
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f40015d0, 00:00:00:00:00:02, ff:ff:ff:ff:ff:ff, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f40015d0
UID = 40
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f40015d0
Pkt UID is 40)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7be20)
UID is 40
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 00:00:00:00:00:02 destination is ff:ff:ff:ff:ff:ff
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7be20)
UID is 40
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc5f4024690, 02-06-00:00:00:00:00:02, 2054)
CsmaNetDevice:SendFrom(0x7fc5f4024690, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:02, 2054)
packet =0x7fc5f4024690
UID is 42)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4024690, aa:04:25:10:a4:2c, 00:00:00:00:00:02, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4024690
UID = 42
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4024690
Pkt UID is 42)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f40015d0, 0xf7ba80)
UID is 42
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7ba80)
UID is 42
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:02
CsmaNetDevice:GetAddress()
ArpL3Protocol:Receive(0xf7d900, 0xf7be20, 46, 2054, 02-06-aa:04:25:10:a4:2c, 02-06-00:00:00:00:00:02, 0)
ARP: received packet of size 46
ArpL3Protocol:FindCache(0xf7d900, 0xf7be20)
ARP: received reply node=1, got request from 7.1.0.3 for address 7.1.0.2; we have addresses: 
7.1.0.2, 
CsmaNetDevice:GetAddress()
node=1, got reply from 7.1.0.3 for waiting entry -- flush
CsmaNetDevice:NeedsArp()
ArpL3Protocol:Lookup(0xf7d900, 0x7fc5f4026960, 7.1.0.3, 0xf7be20, 0xf80e40, 0x7fc5f8c53840)
node=1, alive entry for 7.1.0.3 valid -- send
CsmaNetDevice:Send(0x7fc5f4026960, 00-06-aa:04:25:10:a4:2c, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4026960, 02-06-00:00:00:00:00:02, 00-06-aa:04:25:10:a4:2c, 2048)
packet =0x7fc5f4026960
UID is 39)
Sending From : 02-06-00:00:00:00:00:02 To : 00-06-aa:04:25:10:a4:2c
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4026960, 00:00:00:00:00:02, aa:04:25:10:a4:2c, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4026960
UID = 39
CsmaNetDevice:IsSendEnabled()
Channel busy, backing off for 1e-06 sec
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4026960
UID = 39
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4026960
Pkt UID is 39)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7be20)
UID is 39
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 00:00:00:00:00:02 destination is aa:04:25:10:a4:2c
CsmaNetDevice:Receive(0x7fc5f4025950, 0xf7be20)
UID is 39
CsmaNetDevice:TransmitReadyEvent()
64 bytes from 7.1.0.2: icmp_seq=1 ttl=64 time=16.1 ms

--- 7.1.0.2 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 16.134/16.134/16.134/0.000 ms
mininet> h1 ping -c1 7.1.0.2[1P.0.22.0.2[C[C[C[C
CsmaNetDevice:Send(0x7fc5f4025950, 02-06-00:00:00:00:00:04, 2048)
CsmaNetDevice:SendFrom(0x7fc5f4025950, 02-06-aa:04:25PING 7.2.0.2 (7.2.0.2) 56(84) bytes of data.
:10:a4:2c, 02-06-00:00:00:00:00:04, 2048)
packet =0x7fc5f4025950
UID is 44)
Sending From : 02-06-aa:04:25:10:a4:2c To : 02-06-00:00:00:00:00:04
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc5f4025950, aa:04:25:10:a4:2c, 00:00:00:00:00:04, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc5f4025950
UID = 44
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc5f4025950
Pkt UID is 44)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc5f4026960, 0xf7ba80)
UID is 44
CsmaNetDevice:Receive(0x7fc5f4024690, 0xf7ba80)
UID is 44
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is aa:04:25:10:a4:2c destination is 00:00:00:00:00:04
CsmaNetDevice:TransmitReadyEvent()

--- 7.2.0.2 ping statistics ---
1 packets transmitted, 0 received, 100% packet loss, time 0ms

mininet> quit
Ipv4L3Protocol:DoDispose(0xf7cca0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf7ca40)
Icmpv4L4Protocol:DoDispose(0xf7ce70)
Ipv4L3Protocol:DoDispose(0xf7e900)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf7d900)
Icmpv4L4Protocol:DoDispose(0xf7eb10)
Ipv4L3Protocol:DoDispose(0xf93780)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf93520)
Icmpv4L4Protocol:DoDispose(0xf93950)
Ipv4L3Protocol:DoDispose(0xf953e0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf943e0)
Icmpv4L4Protocol:DoDispose(0xf955f0)
Ipv4L3Protocol:DoDispose(0xfa8b90)
ArpL3Protocol:DoDispose(0xf93050)
Icmpv4L4Protocol:DoDispose(0xf7a9b0)
Ipv4L3Protocol:DoDispose(0xfaed30)
ArpL3Protocol:DoDispose(0xfae850)
Icmpv4L4Protocol:DoDispose(0xfaea20)
CsmaNetDevice:~CsmaNetDevice()
CsmaNetDevice:~CsmaNetDevice()
CsmaNetDevice:~CsmaNetDevice()
CsmaNetDevice:~CsmaNetDevice()
*** Stopping 1 controllers
c0 
*** Stopping 0 links

*** Stopping 0 switches

*** Stopping 2 hosts
h1 h2 
*** Done
Ipv4L3Protocol:~Ipv4L3Protocol(0xf7cca0)
ArpL3Protocol:~ArpL3Protocol(0xf7ca40)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xf7ce70)
Ipv4L3Protocol:~Ipv4L3Protocol(0xf93780)
ArpL3Protocol:~ArpL3Protocol(0xf93520)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xf93950)
Ipv4L3Protocol:~Ipv4L3Protocol(0xfa8b90)
ArpL3Protocol:~ArpL3Protocol(0xf93050)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xf7a9b0)
Ipv4L3Protocol:~Ipv4L3Protocol(0xfaed30)
ArpL3Protocol:~ArpL3Protocol(0xfae850)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xfaea20)
Ipv4L3Protocol:~Ipv4L3Protocol(0xf7e900)
ArpL3Protocol:~ArpL3Protocol(0xf7d900)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xf7eb10)
Ipv4L3Protocol:~Ipv4L3Protocol(0xf953e0)
ArpL3Protocol:~ArpL3Protocol(0xf943e0)
Icmpv4L4Protocol:~Icmpv4L4Protocol(0xf955f0)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
*** defaultIntf: warning: h1 has no interfaces
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 567, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 435, in LteNetwork
    print (h1.MAC())
  File "build/bdist.linux-x86_64/egg/mininet/node.py", line 547, in MAC
AttributeError: 'NoneType' object has no attribute 'MAC'
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
*** defaultIntf: warning: h1 has no interfaces
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 567, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 435, in LteNetwork
    print (h1.IP())
  File "build/bdist.linux-x86_64/egg/mininet/node.py", line 543, in IP
AttributeError: 'NoneType' object has no attribute 'IP'
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x24d1a80)
CsmaNetDevice:SetMtu(0x24d1a80, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x225c590)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffee8597460)
CsmaNetDevice:SetQueue(0x24d1cf0)
CsmaNetDevice:Attach(0x24d1a80, 0x7ffee8597510)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x24d1e20)
CsmaNetDevice:SetMtu(0x24d1e20, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x24d14d0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffee8597460)
CsmaNetDevice:SetQueue(0x24d23a0)
CsmaNetDevice:Attach(0x24d1e20, 0x7ffee8597510)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x24d2a40)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
ArpL3Protocol:SetNode(0x24d2a40, 0x225c590)
Ipv4L3Protocol:Ipv4L3Protocol(0x24d2ca0)
Ipv4L3Protocol:SetIpForward(0x24d2ca0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x24d2ca0, 1)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
Ipv4L3Protocol:SetNode(0x24d2ca0, 0x225c590)
Ipv4L3Protocol:SetupLoopback(0x24d2ca0)
Ipv4L3Protocol:AddIpv4Interface(0x24d2ca0, 0x24d2490)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x24d2e70)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Icmpv4L4Protocol:SetNode(0x24d2e70, 0x225c590)
Ipv4L3Protocol:Insert(0x24d2ca0, 0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Icmpv4L4Protocol:SetDownTarget(0x24d2e70, 0x7ffee8597430)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:SetRoutingProtocol(0x24d2ca0, 0x24d25d0)
Ipv4L3Protocol:GetNInterfaces(0x24d2ca0)
Ipv4L3Protocol:IsUp(0x24d2ca0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetNAddresses(0x24d2ca0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetNAddresses(0x24d2ca0, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 0)
Ipv4L3Protocol:GetNInterfaces(0x24d2ca0)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:Insert(0x24d2ca0, 0x24d3f90)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
Ipv4L3Protocol:Insert(0x24d2ca0, 0x24d3f20)
Ipv4L3Protocol:NotifyNewAggregate(0x24d2ca0)
ArpL3Protocol:NotifyNewAggregate(0x24d2a40)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d2e70)
ArpL3Protocol:ArpL3Protocol(0x24d3900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
ArpL3Protocol:SetNode(0x24d3900, 0x24d14d0)
Ipv4L3Protocol:Ipv4L3Protocol(0x24d4900)
Ipv4L3Protocol:SetIpForward(0x24d4900, 1)
Ipv4L3Protocol:SetWeakEsModel(0x24d4900, 1)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
Ipv4L3Protocol:SetNode(0x24d4900, 0x24d14d0)
Ipv4L3Protocol:SetupLoopback(0x24d4900)
Ipv4L3Protocol:AddIpv4Interface(0x24d4900, 0x24d4040)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x24d4b10)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Icmpv4L4Protocol:SetNode(0x24d4b10, 0x24d14d0)
Ipv4L3Protocol:Insert(0x24d4900, 0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Icmpv4L4Protocol:SetDownTarget(0x24d4b10, 0x7ffee8597430)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:SetRoutingProtocol(0x24d4900, 0x24d4280)
Ipv4L3Protocol:GetNInterfaces(0x24d4900)
Ipv4L3Protocol:IsUp(0x24d4900, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetAddress(0x24d4900, 0, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 0)
Ipv4L3Protocol:GetNInterfaces(0x24d4900)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:Insert(0x24d4900, 0x24d5bd0)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
Ipv4L3Protocol:Insert(0x24d4900, 0x24d5b60)
Ipv4L3Protocol:NotifyNewAggregate(0x24d4900)
ArpL3Protocol:NotifyNewAggregate(0x24d3900)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d4b10)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24d2ca0, 0x24d1a80)
Ipv4L3Protocol:AddInterface(0x24d2ca0, 0x24d1a80)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x24d2a40, 0x24d1a80, 0x24d5c80)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffee85973b0)
Ipv4L3Protocol:AddIpv4Interface(0x24d2ca0, 0x24d5c80)
Ipv4L3Protocol:AddAddress(0x24d2ca0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:IsUp(0x24d2ca0, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:SetMetric(0x24d2ca0, 1, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:SetUp(0x24d2ca0, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x24d2ca0, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetNAddresses(0x24d2ca0, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24d4900, 0x24d1e20)
Ipv4L3Protocol:AddInterface(0x24d4900, 0x24d1e20)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x24d3900, 0x24d1e20, 0x24d6db0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffee85973b0)
Ipv4L3Protocol:AddIpv4Interface(0x24d4900, 0x24d6db0)
Ipv4L3Protocol:AddAddress(0x24d4900, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:IsUp(0x24d4900, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:SetMetric(0x24d4900, 1, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:SetUp(0x24d4900, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x24d4900, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x24d2ca0)
Ipv4L3Protocol:GetAddress(0x24d4900, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x24d4900)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffee8596fc0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffee8596fc0)
CsmaNetDevice:CsmaNetDevice(0x24e8650)
CsmaNetDevice:SetMtu(0x24e8650, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x24e82a0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffee8597460)
CsmaNetDevice:SetQueue(0x24e8880)
CsmaNetDevice:Attach(0x24e8650, 0x7ffee8597510)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x24e8950)
CsmaNetDevice:SetMtu(0x24e8950, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x24e8330)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffee8597460)
CsmaNetDevice:SetQueue(0x24e8ea0)
CsmaNetDevice:Attach(0x24e8950, 0x7ffee8597510)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x24e9520)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
ArpL3Protocol:SetNode(0x24e9520, 0x24e82a0)
Ipv4L3Protocol:Ipv4L3Protocol(0x24e9780)
Ipv4L3Protocol:SetIpForward(0x24e9780, 1)
Ipv4L3Protocol:SetWeakEsModel(0x24e9780, 1)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
Ipv4L3Protocol:SetNode(0x24e9780, 0x24e82a0)
Ipv4L3Protocol:SetupLoopback(0x24e9780)
Ipv4L3Protocol:AddIpv4Interface(0x24e9780, 0x24e8f70)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x24e9950)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Icmpv4L4Protocol:SetNode(0x24e9950, 0x24e82a0)
Ipv4L3Protocol:Insert(0x24e9780, 0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Icmpv4L4Protocol:SetDownTarget(0x24e9950, 0x7ffee8597430)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:SetRoutingProtocol(0x24e9780, 0x24e90b0)
Ipv4L3Protocol:GetNInterfaces(0x24e9780)
Ipv4L3Protocol:IsUp(0x24e9780, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetNAddresses(0x24e9780, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetAddress(0x24e9780, 0, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetNAddresses(0x24e9780, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 0)
Ipv4L3Protocol:GetNInterfaces(0x24e9780)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:Insert(0x24e9780, 0x24eaa70)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
Ipv4L3Protocol:Insert(0x24e9780, 0x24eaa00)
Ipv4L3Protocol:NotifyNewAggregate(0x24e9780)
ArpL3Protocol:NotifyNewAggregate(0x24e9520)
Icmpv4L4Protocol:NotifyNewAggregate(0x24e9950)
ArpL3Protocol:ArpL3Protocol(0x24ea3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
ArpL3Protocol:SetNode(0x24ea3e0, 0x24e8330)
Ipv4L3Protocol:Ipv4L3Protocol(0x24eb3e0)
Ipv4L3Protocol:SetIpForward(0x24eb3e0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x24eb3e0, 1)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
Ipv4L3Protocol:SetNode(0x24eb3e0, 0x24e8330)
Ipv4L3Protocol:SetupLoopback(0x24eb3e0)
Ipv4L3Protocol:AddIpv4Interface(0x24eb3e0, 0x24eab20)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x24eb5f0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Icmpv4L4Protocol:SetNode(0x24eb5f0, 0x24e8330)
Ipv4L3Protocol:Insert(0x24eb3e0, 0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Icmpv4L4Protocol:SetDownTarget(0x24eb5f0, 0x7ffee8597430)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:SetRoutingProtocol(0x24eb3e0, 0x24ead60)
Ipv4L3Protocol:GetNInterfaces(0x24eb3e0)
Ipv4L3Protocol:IsUp(0x24eb3e0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 0)
Ipv4L3Protocol:GetNInterfaces(0x24eb3e0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:Insert(0x24eb3e0, 0x24ec6b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
Ipv4L3Protocol:Insert(0x24eb3e0, 0x24ec640)
Ipv4L3Protocol:NotifyNewAggregate(0x24eb3e0)
ArpL3Protocol:NotifyNewAggregate(0x24ea3e0)
Icmpv4L4Protocol:NotifyNewAggregate(0x24eb5f0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24e9780, 0x24e8650)
Ipv4L3Protocol:AddInterface(0x24e9780, 0x24e8650)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x24e9520, 0x24e8650, 0x24ec760)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffee85973b0)
Ipv4L3Protocol:AddIpv4Interface(0x24e9780, 0x24ec760)
Ipv4L3Protocol:AddAddress(0x24e9780, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:IsUp(0x24e9780, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:SetMetric(0x24e9780, 1, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:SetUp(0x24e9780, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x24e9780, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetNAddresses(0x24e9780, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24eb3e0, 0x24e8950)
Ipv4L3Protocol:AddInterface(0x24eb3e0, 0x24e8950)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x24ea3e0, 0x24e8950, 0x24ed590)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffee85973b0)
Ipv4L3Protocol:AddIpv4Interface(0x24eb3e0, 0x24ed590)
Ipv4L3Protocol:AddAddress(0x24eb3e0, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:IsUp(0x24eb3e0, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:SetMetric(0x24eb3e0, 1, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:SetUp(0x24eb3e0, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x24e9780)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x24eb3e0)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffee8596fc0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffee8596fc0)
ArpL3Protocol:ArpL3Protocol(0x24e9050)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
ArpL3Protocol:SetNode(0x24e9050, 0x24fe940)
Ipv4L3Protocol:Ipv4L3Protocol(0x24feb90)
Ipv4L3Protocol:SetIpForward(0x24feb90, 1)
Ipv4L3Protocol:SetWeakEsModel(0x24feb90, 1)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
Ipv4L3Protocol:SetNode(0x24feb90, 0x24fe940)
Ipv4L3Protocol:SetupLoopback(0x24feb90)
Ipv4L3Protocol:AddIpv4Interface(0x24feb90, 0x24e8550)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x24d09b0)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Icmpv4L4Protocol:SetNode(0x24d09b0, 0x24fe940)
Ipv4L3Protocol:Insert(0x24feb90, 0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Icmpv4L4Protocol:SetDownTarget(0x24d09b0, 0x7ffee8597440)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:SetRoutingProtocol(0x24feb90, 0x24ec920)
Ipv4L3Protocol:GetNInterfaces(0x24feb90)
Ipv4L3Protocol:IsUp(0x24feb90, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetAddress(0x24feb90, 0, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 0)
Ipv4L3Protocol:GetNInterfaces(0x24feb90)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:Insert(0x24feb90, 0x24ffcf0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:Insert(0x24feb90, 0x24fff60)
Ipv4L3Protocol:NotifyNewAggregate(0x24feb90)
ArpL3Protocol:NotifyNewAggregate(0x24e9050)
Icmpv4L4Protocol:NotifyNewAggregate(0x24d09b0)
Ipv4L3Protocol:GetInterfaceForDevice(0x24feb90, 0x25006a0)
Ipv4L3Protocol:AddInterface(0x24feb90, 0x25006a0)
Ipv4L3Protocol:AddIpv4Interface(0x24feb90, 0x24ffda0)
Ipv4L3Protocol:AddAddress(0x24feb90, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:IsUp(0x24feb90, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:SetMetric(0x24feb90, 1, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:SetUp(0x24feb90, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
ArpL3Protocol:ArpL3Protocol(0x2504850)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
ArpL3Protocol:SetNode(0x2504850, 0x2501180)
Ipv4L3Protocol:Ipv4L3Protocol(0x2504d30)
Ipv4L3Protocol:SetIpForward(0x2504d30, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2504d30, 1)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
Ipv4L3Protocol:SetNode(0x2504d30, 0x2501180)
Ipv4L3Protocol:SetupLoopback(0x2504d30)
Ipv4L3Protocol:AddIpv4Interface(0x2504d30, 0x2503c30)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2504a20)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Icmpv4L4Protocol:SetNode(0x2504a20, 0x2501180)
Ipv4L3Protocol:Insert(0x2504d30, 0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Icmpv4L4Protocol:SetDownTarget(0x2504a20, 0x7ffee85969a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:SetRoutingProtocol(0x2504d30, 0x25045f0)
Ipv4L3Protocol:GetNInterfaces(0x2504d30)
Ipv4L3Protocol:IsUp(0x2504d30, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetNAddresses(0x2504d30, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetAddress(0x2504d30, 0, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetNAddresses(0x2504d30, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 0)
Ipv4L3Protocol:GetNInterfaces(0x2504d30)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:Insert(0x2504d30, 0x2505fe0)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:Insert(0x2504d30, 0x2505f70)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:GetInterfaceForDevice(0x2504d30, 0x2506960)
Ipv4L3Protocol:AddInterface(0x2504d30, 0x2506960)
Ipv4L3Protocol:AddIpv4Interface(0x2504d30, 0x2507320)
Ipv4L3Protocol:AddAddress(0x2504d30, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:IsUp(0x2504d30, 1)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:SetMetric(0x2504d30, 1, 1)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:SetUp(0x2504d30, 1)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetNAddresses(0x2504d30, 1)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetNAddresses(0x2504d30, 1)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x24feb90, 0x2506c50)
Ipv4L3Protocol:AddInterface(0x24feb90, 0x2506c50)
Ipv4L3Protocol:AddIpv4Interface(0x24feb90, 0x25077a0)
Ipv4L3Protocol:AddAddress(0x24feb90, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:IsUp(0x24feb90, 2)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:SetMetric(0x24feb90, 2, 1)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:SetUp(0x24feb90, 2)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 2)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetNAddresses(0x24feb90, 2)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:GetAddress(0x2504d30, 1, 0)
Ipv4L3Protocol:GetInterface(0x2504d30, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 2, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x2504d30)
ArpL3Protocol:NotifyNewAggregate(0x2504850)
Icmpv4L4Protocol:NotifyNewAggregate(0x2504a20)
Ipv4L3Protocol:GetInterfaceForDevice(0x24d4900, 0x250aad0)
Ipv4L3Protocol:AddInterface(0x24d4900, 0x250aad0)
Ipv4L3Protocol:AddIpv4Interface(0x24d4900, 0x250e3b0)
Ipv4L3Protocol:AddAddress(0x24d4900, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:IsUp(0x24d4900, 2)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:SetMetric(0x24d4900, 2, 1)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:SetUp(0x24d4900, 2)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 2)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 2)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x24eb3e0, 0x250dd10)
Ipv4L3Protocol:AddInterface(0x24eb3e0, 0x250dd10)
Ipv4L3Protocol:AddIpv4Interface(0x24eb3e0, 0x250e600)
Ipv4L3Protocol:AddAddress(0x24eb3e0, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:IsUp(0x24eb3e0, 2)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:SetMetric(0x24eb3e0, 2, 1)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:SetUp(0x24eb3e0, 2)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 2)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 2)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x24d4900)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x24eb3e0)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Ipv4L3Protocol:GetAddress(0x24feb90, 1, 0)
Ipv4L3Protocol:GetInterface(0x24feb90, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x24d4900)
Ipv4L3Protocol:GetRoutingProtocol(0x24d2ca0)
Ipv4L3Protocol:GetRoutingProtocol(0x24eb3e0)
Ipv4L3Protocol:GetInterfaceForDevice(0x24d4900, 0x250aad0)
Ipv4L3Protocol:GetNAddresses(0x24d4900, 2)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetAddress(0x24d4900, 2, 0)
Ipv4L3Protocol:GetInterface(0x24d4900, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x24eb3e0, 0x250dd10)
Ipv4L3Protocol:GetNAddresses(0x24eb3e0, 2)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
Ipv4L3Protocol:GetAddress(0x24eb3e0, 2, 0)
Ipv4L3Protocol:GetInterface(0x24eb3e0, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24d2ca0, 0x24d1a80)
Ipv4L3Protocol:GetNAddresses(0x24d2ca0, 1)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
Ipv4L3Protocol:GetAddress(0x24d2ca0, 1, 0)
Ipv4L3Protocol:GetInterface(0x24d2ca0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x24e9780, 0x24e8650)
Ipv4L3Protocol:GetNAddresses(0x24e9780, 1)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
Ipv4L3Protocol:GetAddress(0x24e9780, 1, 0)
Ipv4L3Protocol:GetInterface(0x24e9780, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7fc8480015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc8480015d0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc8480015d0
UID is 0)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480015d0, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848002910, 0x24d1a80)
UID is 0
CsmaNetDevice:Receive(0x7fc848003ed0, 0x24d1a80)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc848003ed0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc848003ed0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc848003ed0
UID is 1)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848003ed0, 96:f0:98:fd:36:f2, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848003ed0
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848003ed0
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848002910, 0x24e8650)
UID is 1
CsmaNetDevice:Receive(0x7fc848003f40, 0x24e8650)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc848023560, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc848023560, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc848023560
UID is 2)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848023560, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848023560
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848023560
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec

CsmaNetDevice:Receive(0x7fc8480015d0, 0x24d1a80)
UID is 2
CsmaNetDevice:Receive(0x7fc848026320, 0x24d1a80)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()



*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7fc848026320, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc848026320, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc848026320
UID is 3)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848026320, 96:f0:98:fd:36:f2, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848026320
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848026320
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848003ed0, 0x24e8650)
UID is 3
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24e8650)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480015d0, 02-06-33:33:ff:bf:cc:da, 34525)
CsmaNetDevice:SendFrom(0x7fc8480015d0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:ff:bf:cc:da, 34525)
packet =0x7fc8480015d0
UID is 4)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:ff:bf:cc:da
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480015d0, 1a:bc:a7:bf:cc:da, 33:33:ff:bf:cc:da, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480015d0
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480015d0
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848023560, 0x24d1a80)
UID is 4
CsmaNetDevice:Receive(0x7fc848003ed0, 0x24d1a80)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:ff:bf:cc:da
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480264d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc8480264d0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc8480264d0
UID is 5)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480264d0, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480264d0
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480264d0
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24d1a80)
UID is 5
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24d1a80)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480251e0, 02-06-33:33:ff:fd:36:f2, 34525)
CsmaNetDevice:SendFrom(0x7fc8480251e0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:ff:fd:36:f2, 34525)
packet =0x7fc8480251e0
UID is 6)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:ff:fd:36:f2
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480251e0, 96:f0:98:fd:36:f2, 33:33:ff:fd:36:f2, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480251e0
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480251e0
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848026320, 0x24e8650)
UID is 6
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24e8650)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:ff:fd:36:f2
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc8480015d0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc8480015d0
UID is 7)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480015d0, 96:f0:98:fd:36:f2, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480015d0
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480015d0
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24e8650)
UID is 7
CsmaNetDevice:Receive(0x7fc848026320, 0x24e8650)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc848026320, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc848026320, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc848026320
UID is 8)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848026320, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848026320
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848026320
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480264d0, 0x24d1a80)
UID is 8
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24d1a80)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480251e0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc8480251e0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc8480251e0
UID is 9)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480251e0, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480251e0
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480251e0
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848026320, 0x24d1a80)
UID is 9
CsmaNetDevice:Receive(0x7fc8480264d0, 0x24d1a80)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480264d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc8480264d0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc8480264d0
UID is 10)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480264d0, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480264d0
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480264d0
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24d1a80)
UID is 10
CsmaNetDevice:Receive(0x7fc848026320, 0x24d1a80)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
hCsmaNetDevice:Send(0x7fc848026320, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc848026320, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc848026320
UID is 11)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848026320, 96:f0:98:fd:36:f2, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848026320
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848026320
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24e8650)
UID is 11
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24e8650)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480251e0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc8480251e0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc8480251e0
UID is 12)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480251e0, 96:f0:98:fd:36:f2, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480251e0
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480251e0
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848026320, 0x24e8650)
UID is 12
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24e8650)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
1 CsmaNetDevice:Send(0x7fc8480015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fc8480015d0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fc8480015d0
UID is 13)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480015d0, 96:f0:98:fd:36:f2, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480015d0
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480015d0
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24e8650)
UID is 13
CsmaNetDevice:Receive(0x7fc848026320, 0x24e8650)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc848026320, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc848026320, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc848026320
UID is 14)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc848026320, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc848026320
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc848026320
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480264d0, 0x24d1a80)
UID is 14
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24d1a80)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fc8480251e0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc8480251e0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc8480251e0
UID is 15)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480251e0, 96:f0:98:fd:36:f2, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480251e0
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480251e0
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24e8650)
UID is 15
CsmaNetDevice:Receive(0x7fc8480264d0, 0x24e8650)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()

*** Enter a command for node: h1 <cmd>mininet> pi[KrCsmaNetDevice:Send(0x7fc8480264d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc8480264d0, 02-06-1a:bc:a7:bf:cc:da, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc8480264d0
UID is 16)
Sending From : 02-06-1a:bc:a7:bf:cc:da To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480264d0, 1a:bc:a7:bf:cc:da, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480264d0
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480264d0
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc848026320, 0x24d1a80)
UID is 16
CsmaNetDevice:Receive(0x7fc8480015d0, 0x24d1a80)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 1a:bc:a7:bf:cc:da destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
intCsmaNetDevice:Send(0x7fc8480015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fc8480015d0, 02-06-96:f0:98:fd:36:f2, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fc8480015d0
UID is 17)
Sending From : 02-06-96:f0:98:fd:36:f2 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fc8480015d0, 96:f0:98:fd:36:f2, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fc8480015d0
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fc8480015d0
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fc8480251e0, 0x24e8650)
UID is 17
CsmaNetDevice:Receive(0x7fc848026320, 0x24e8650)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 96:f0:98:fd:36:f2 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
 h1.IP()
*** Unknown command: print h1.IP()
mininet> h1.IP()
> e^?^?^?^?^?
> exit
bash: syntax error near unexpected token `exit'
mininet> quit
Ipv4L3Protocol:DoDispose(0x24d2ca0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x24d2a40)
Icmpv4L4Protocol:DoDispose(0x24d2e70)
Ipv4L3Protocol:DoDispose(0x24d4900)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x24d3900)
Icmpv4L4Protocol:DoDispose(0x24d4b10)
terminate called after throwing an instance of 'std::out_of_range'
Ipv4L3Protocol:DoDispose(0x24e9780)
  what():  vector::_M_range_check
CsmaNetDevice:Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x1ed5ad0)
CsmaNetDevice:SetMtu(0x1ed5ad0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x1c5f7c0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffd695727d0)
CsmaNetDevice:SetQueue(0x1ed5d40)
CsmaNetDevice:Attach(0x1ed5ad0, 0x7ffd69572880)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x1ed5e70)
CsmaNetDevice:SetMtu(0x1ed5e70, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x1ed54f0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffd695727d0)
CsmaNetDevice:SetQueue(0x1ed63f0)
CsmaNetDevice:Attach(0x1ed5e70, 0x7ffd69572880)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x1ed6a90)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
ArpL3Protocol:SetNode(0x1ed6a90, 0x1c5f7c0)
Ipv4L3Protocol:Ipv4L3Protocol(0x1ed6cf0)
Ipv4L3Protocol:SetIpForward(0x1ed6cf0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1ed6cf0, 1)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
Ipv4L3Protocol:SetNode(0x1ed6cf0, 0x1c5f7c0)
Ipv4L3Protocol:SetupLoopback(0x1ed6cf0)
Ipv4L3Protocol:AddIpv4Interface(0x1ed6cf0, 0x1ed64e0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1ed6ec0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Icmpv4L4Protocol:SetNode(0x1ed6ec0, 0x1c5f7c0)
Ipv4L3Protocol:Insert(0x1ed6cf0, 0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Icmpv4L4Protocol:SetDownTarget(0x1ed6ec0, 0x7ffd695727a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:SetRoutingProtocol(0x1ed6cf0, 0x1ed6620)
Ipv4L3Protocol:GetNInterfaces(0x1ed6cf0)
Ipv4L3Protocol:IsUp(0x1ed6cf0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetNAddresses(0x1ed6cf0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetNAddresses(0x1ed6cf0, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 0)
Ipv4L3Protocol:GetNInterfaces(0x1ed6cf0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:Insert(0x1ed6cf0, 0x1ed7fe0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
Ipv4L3Protocol:Insert(0x1ed6cf0, 0x1ed7f70)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed6cf0)
ArpL3Protocol:NotifyNewAggregate(0x1ed6a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed6ec0)
ArpL3Protocol:ArpL3Protocol(0x1ed7950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
ArpL3Protocol:SetNode(0x1ed7950, 0x1ed54f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x1ed8950)
Ipv4L3Protocol:SetIpForward(0x1ed8950, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1ed8950, 1)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
Ipv4L3Protocol:SetNode(0x1ed8950, 0x1ed54f0)
Ipv4L3Protocol:SetupLoopback(0x1ed8950)
Ipv4L3Protocol:AddIpv4Interface(0x1ed8950, 0x1ed8090)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1ed8b60)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Icmpv4L4Protocol:SetNode(0x1ed8b60, 0x1ed54f0)
Ipv4L3Protocol:Insert(0x1ed8950, 0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Icmpv4L4Protocol:SetDownTarget(0x1ed8b60, 0x7ffd695727a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:SetRoutingProtocol(0x1ed8950, 0x1ed82d0)
Ipv4L3Protocol:GetNInterfaces(0x1ed8950)
Ipv4L3Protocol:IsUp(0x1ed8950, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 0, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 0)
Ipv4L3Protocol:GetNInterfaces(0x1ed8950)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:Insert(0x1ed8950, 0x1ed9c20)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
Ipv4L3Protocol:Insert(0x1ed8950, 0x1ed9bb0)
Ipv4L3Protocol:NotifyNewAggregate(0x1ed8950)
ArpL3Protocol:NotifyNewAggregate(0x1ed7950)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed8b60)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1ed6cf0, 0x1ed5ad0)
Ipv4L3Protocol:AddInterface(0x1ed6cf0, 0x1ed5ad0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x1ed6a90, 0x1ed5ad0, 0x1ed9cd0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffd69572720)
Ipv4L3Protocol:AddIpv4Interface(0x1ed6cf0, 0x1ed9cd0)
Ipv4L3Protocol:AddAddress(0x1ed6cf0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:IsUp(0x1ed6cf0, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:SetMetric(0x1ed6cf0, 1, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:SetUp(0x1ed6cf0, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x1ed6cf0, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetNAddresses(0x1ed6cf0, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1ed8950, 0x1ed5e70)
Ipv4L3Protocol:AddInterface(0x1ed8950, 0x1ed5e70)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x1ed7950, 0x1ed5e70, 0x1edae00)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffd69572720)
Ipv4L3Protocol:AddIpv4Interface(0x1ed8950, 0x1edae00)
Ipv4L3Protocol:AddAddress(0x1ed8950, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:IsUp(0x1ed8950, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:SetMetric(0x1ed8950, 1, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:SetUp(0x1ed8950, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x1ed6cf0)
Ipv4L3Protocol:GetAddress(0x1ed8950, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x1ed8950)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffd69572330)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffd69572330)
CsmaNetDevice:CsmaNetDevice(0x1eec6a0)
CsmaNetDevice:SetMtu(0x1eec6a0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x1eec2f0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffd695727d0)
CsmaNetDevice:SetQueue(0x1eec8d0)
CsmaNetDevice:Attach(0x1eec6a0, 0x7ffd69572880)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x1eec9a0)
CsmaNetDevice:SetMtu(0x1eec9a0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x1eec380)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffd695727d0)
CsmaNetDevice:SetQueue(0x1eecef0)
CsmaNetDevice:Attach(0x1eec9a0, 0x7ffd69572880)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x1eed570)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
ArpL3Protocol:SetNode(0x1eed570, 0x1eec2f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x1eed7d0)
Ipv4L3Protocol:SetIpForward(0x1eed7d0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1eed7d0, 1)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
Ipv4L3Protocol:SetNode(0x1eed7d0, 0x1eec2f0)
Ipv4L3Protocol:SetupLoopback(0x1eed7d0)
Ipv4L3Protocol:AddIpv4Interface(0x1eed7d0, 0x1eecfc0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1eed9a0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Icmpv4L4Protocol:SetNode(0x1eed9a0, 0x1eec2f0)
Ipv4L3Protocol:Insert(0x1eed7d0, 0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Icmpv4L4Protocol:SetDownTarget(0x1eed9a0, 0x7ffd695727a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:SetRoutingProtocol(0x1eed7d0, 0x1eed100)
Ipv4L3Protocol:GetNInterfaces(0x1eed7d0)
Ipv4L3Protocol:IsUp(0x1eed7d0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetNAddresses(0x1eed7d0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetNAddresses(0x1eed7d0, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 0)
Ipv4L3Protocol:GetNInterfaces(0x1eed7d0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:Insert(0x1eed7d0, 0x1eeeac0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
Ipv4L3Protocol:Insert(0x1eed7d0, 0x1eeea50)
Ipv4L3Protocol:NotifyNewAggregate(0x1eed7d0)
ArpL3Protocol:NotifyNewAggregate(0x1eed570)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eed9a0)
ArpL3Protocol:ArpL3Protocol(0x1eee430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
ArpL3Protocol:SetNode(0x1eee430, 0x1eec380)
Ipv4L3Protocol:Ipv4L3Protocol(0x1eef430)
Ipv4L3Protocol:SetIpForward(0x1eef430, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1eef430, 1)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
Ipv4L3Protocol:SetNode(0x1eef430, 0x1eec380)
Ipv4L3Protocol:SetupLoopback(0x1eef430)
Ipv4L3Protocol:AddIpv4Interface(0x1eef430, 0x1eeeb70)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1eef640)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Icmpv4L4Protocol:SetNode(0x1eef640, 0x1eec380)
Ipv4L3Protocol:Insert(0x1eef430, 0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Icmpv4L4Protocol:SetDownTarget(0x1eef640, 0x7ffd695727a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:SetRoutingProtocol(0x1eef430, 0x1eeedb0)
Ipv4L3Protocol:GetNInterfaces(0x1eef430)
Ipv4L3Protocol:IsUp(0x1eef430, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetAddress(0x1eef430, 0, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 0)
Ipv4L3Protocol:GetNInterfaces(0x1eef430)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:Insert(0x1eef430, 0x1ef0700)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
Ipv4L3Protocol:Insert(0x1eef430, 0x1ef0690)
Ipv4L3Protocol:NotifyNewAggregate(0x1eef430)
ArpL3Protocol:NotifyNewAggregate(0x1eee430)
Icmpv4L4Protocol:NotifyNewAggregate(0x1eef640)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1eed7d0, 0x1eec6a0)
Ipv4L3Protocol:AddInterface(0x1eed7d0, 0x1eec6a0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x1eed570, 0x1eec6a0, 0x1ef07b0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffd69572720)
Ipv4L3Protocol:AddIpv4Interface(0x1eed7d0, 0x1ef07b0)
Ipv4L3Protocol:AddAddress(0x1eed7d0, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:IsUp(0x1eed7d0, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:SetMetric(0x1eed7d0, 1, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:SetUp(0x1eed7d0, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x1eed7d0, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetNAddresses(0x1eed7d0, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1eef430, 0x1eec9a0)
Ipv4L3Protocol:AddInterface(0x1eef430, 0x1eec9a0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x1eee430, 0x1eec9a0, 0x1ef15e0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffd69572720)
Ipv4L3Protocol:AddIpv4Interface(0x1eef430, 0x1ef15e0)
Ipv4L3Protocol:AddAddress(0x1eef430, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:IsUp(0x1eef430, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:SetMetric(0x1eef430, 1, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:SetUp(0x1eef430, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x1eef430, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x1eed7d0)
Ipv4L3Protocol:GetAddress(0x1eef430, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x1eef430)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffd69572330)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffd69572330)
ArpL3Protocol:ArpL3Protocol(0x1eed0a0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
ArpL3Protocol:SetNode(0x1eed0a0, 0x1f02990)
Ipv4L3Protocol:Ipv4L3Protocol(0x1f02be0)
Ipv4L3Protocol:SetIpForward(0x1f02be0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1f02be0, 1)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
Ipv4L3Protocol:SetNode(0x1f02be0, 0x1f02990)
Ipv4L3Protocol:SetupLoopback(0x1f02be0)
Ipv4L3Protocol:AddIpv4Interface(0x1f02be0, 0x1eec5a0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1ed4a00)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Icmpv4L4Protocol:SetNode(0x1ed4a00, 0x1f02990)
Ipv4L3Protocol:Insert(0x1f02be0, 0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Icmpv4L4Protocol:SetDownTarget(0x1ed4a00, 0x7ffd695727b0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:SetRoutingProtocol(0x1f02be0, 0x1ef0970)
Ipv4L3Protocol:GetNInterfaces(0x1f02be0)
Ipv4L3Protocol:IsUp(0x1f02be0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetAddress(0x1f02be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 0)
Ipv4L3Protocol:GetNInterfaces(0x1f02be0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:Insert(0x1f02be0, 0x1f03d40)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:Insert(0x1f02be0, 0x1f03fb0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f02be0)
ArpL3Protocol:NotifyNewAggregate(0x1eed0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1ed4a00)
Ipv4L3Protocol:GetInterfaceForDevice(0x1f02be0, 0x1f046f0)
Ipv4L3Protocol:AddInterface(0x1f02be0, 0x1f046f0)
Ipv4L3Protocol:AddIpv4Interface(0x1f02be0, 0x1f03df0)
Ipv4L3Protocol:AddAddress(0x1f02be0, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:IsUp(0x1f02be0, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:SetMetric(0x1f02be0, 1, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:SetUp(0x1f02be0, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
ArpL3Protocol:ArpL3Protocol(0x1f088a0)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
ArpL3Protocol:SetNode(0x1f088a0, 0x1f051d0)
Ipv4L3Protocol:Ipv4L3Protocol(0x1f08d80)
Ipv4L3Protocol:SetIpForward(0x1f08d80, 1)
Ipv4L3Protocol:SetWeakEsModel(0x1f08d80, 1)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
Ipv4L3Protocol:SetNode(0x1f08d80, 0x1f051d0)
Ipv4L3Protocol:SetupLoopback(0x1f08d80)
Ipv4L3Protocol:AddIpv4Interface(0x1f08d80, 0x1f07c80)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x1f08a70)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Icmpv4L4Protocol:SetNode(0x1f08a70, 0x1f051d0)
Ipv4L3Protocol:Insert(0x1f08d80, 0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Icmpv4L4Protocol:SetDownTarget(0x1f08a70, 0x7ffd69571d10)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:SetRoutingProtocol(0x1f08d80, 0x1f08640)
Ipv4L3Protocol:GetNInterfaces(0x1f08d80)
Ipv4L3Protocol:IsUp(0x1f08d80, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetNAddresses(0x1f08d80, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetAddress(0x1f08d80, 0, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetNAddresses(0x1f08d80, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 0)
Ipv4L3Protocol:GetNInterfaces(0x1f08d80)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:Insert(0x1f08d80, 0x1f0a030)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:Insert(0x1f08d80, 0x1f09fc0)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:GetInterfaceForDevice(0x1f08d80, 0x1f0a9b0)
Ipv4L3Protocol:AddInterface(0x1f08d80, 0x1f0a9b0)
Ipv4L3Protocol:AddIpv4Interface(0x1f08d80, 0x1f0b370)
Ipv4L3Protocol:AddAddress(0x1f08d80, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:IsUp(0x1f08d80, 1)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:SetMetric(0x1f08d80, 1, 1)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:SetUp(0x1f08d80, 1)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetNAddresses(0x1f08d80, 1)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetNAddresses(0x1f08d80, 1)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x1f02be0, 0x1f0aca0)
Ipv4L3Protocol:AddInterface(0x1f02be0, 0x1f0aca0)
Ipv4L3Protocol:AddIpv4Interface(0x1f02be0, 0x1f0b7f0)
Ipv4L3Protocol:AddAddress(0x1f02be0, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:IsUp(0x1f02be0, 2)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:SetMetric(0x1f02be0, 2, 1)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:SetUp(0x1f02be0, 2)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 2)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetNAddresses(0x1f02be0, 2)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:GetAddress(0x1f08d80, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f08d80, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x1f08d80)
ArpL3Protocol:NotifyNewAggregate(0x1f088a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x1f08a70)
Ipv4L3Protocol:GetInterfaceForDevice(0x1ed8950, 0x1f0eb20)
Ipv4L3Protocol:AddInterface(0x1ed8950, 0x1f0eb20)
Ipv4L3Protocol:AddIpv4Interface(0x1ed8950, 0x1f12400)
Ipv4L3Protocol:AddAddress(0x1ed8950, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:IsUp(0x1ed8950, 2)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:SetMetric(0x1ed8950, 2, 1)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:SetUp(0x1ed8950, 2)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 2)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 2)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x1eef430, 0x1f11d60)
Ipv4L3Protocol:AddInterface(0x1eef430, 0x1f11d60)
Ipv4L3Protocol:AddIpv4Interface(0x1eef430, 0x1f12650)
Ipv4L3Protocol:AddAddress(0x1eef430, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:IsUp(0x1eef430, 2)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:SetMetric(0x1eef430, 2, 1)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:SetUp(0x1eef430, 2)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 2)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 2)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x1ed8950)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x1eef430)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Ipv4L3Protocol:GetAddress(0x1f02be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1f02be0, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x1ed8950)
Ipv4L3Protocol:GetRoutingProtocol(0x1ed6cf0)
Ipv4L3Protocol:GetRoutingProtocol(0x1eef430)
Ipv4L3Protocol:GetInterfaceForDevice(0x1ed8950, 0x1f0eb20)
Ipv4L3Protocol:GetNAddresses(0x1ed8950, 2)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetAddress(0x1ed8950, 2, 0)
Ipv4L3Protocol:GetInterface(0x1ed8950, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x1eef430, 0x1f11d60)
Ipv4L3Protocol:GetNAddresses(0x1eef430, 2)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
Ipv4L3Protocol:GetAddress(0x1eef430, 2, 0)
Ipv4L3Protocol:GetInterface(0x1eef430, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1ed6cf0, 0x1ed5ad0)
Ipv4L3Protocol:GetNAddresses(0x1ed6cf0, 1)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
Ipv4L3Protocol:GetAddress(0x1ed6cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1ed6cf0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x1eed7d0, 0x1eec6a0)
Ipv4L3Protocol:GetNAddresses(0x1eed7d0, 1)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
Ipv4L3Protocol:GetAddress(0x1eed7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x1eed7d0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7fa9940015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa9940015d0, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa9940015d0
UID is 0)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa9940015d0, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa9940015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa9940015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994002910, 0x1ed5ad0)
UID is 0
CsmaNetDevice:Receive(0x7fa994003f20, 0x1ed5ad0)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f20, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994002910, 0x1eec6a0)
UID is 1
CsmaNetDevice:Receive(0x7fa994003f90, 0x1eec6a0)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f90, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f90, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994003f90
UID is 2)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f90, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f90
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f90
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa9940015d0, 0x1ed5ad0)
UID is 2
CsmaNetDevice:Receive(0x7fa994002910, 0x1ed5ad0)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994004160, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994004160, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994004160
UID is 3)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994004160, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994004160
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994004160
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f90, 0x1ed5ad0)
UID is 3
CsmaNetDevice:Receive(0x7fa994026650, 0x1ed5ad0)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()




*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7fa994026650, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994026650, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994026650
UID is 4)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994026650, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994026650
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994026650
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f20, 0x1eec6a0)
UID is 4
CsmaNetDevice:Receive(0x7fa994003f90, 0x1eec6a0)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f90, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f90, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994003f90
UID is 5)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f90, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f90
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f90
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994004160, 0x1ed5ad0)
UID is 5
CsmaNetDevice:Receive(0x7fa994003f20, 0x1ed5ad0)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f20, 02-06-33:33:ff:a4:21:32, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f20, 02-06-e6:55:30:a4:21:32, 02-06-33:33:ff:a4:21:32, 34525)
packet =0x7fa994003f20
UID is 6)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:ff:a4:21:32
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f20, e6:55:30:a4:21:32, 33:33:ff:a4:21:32, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f20
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f20
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f90, 0x1ed5ad0)
UID is 6
CsmaNetDevice:Receive(0x7fa994004160, 0x1ed5ad0)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:ff:a4:21:32
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994004160, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7fa994004160, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7fa994004160
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994004160, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994004160
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994004160
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994026650, 0x1eec6a0)
UID is 7
CsmaNetDevice:Receive(0x7fa994003f90, 0x1eec6a0)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f90, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f90, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994003f90
UID is 8)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f90, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f90
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f90
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994004160, 0x1eec6a0)
UID is 8
CsmaNetDevice:Receive(0x7fa994026650, 0x1eec6a0)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994026650, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994026650, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994026650
UID is 9)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994026650, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994026650
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994026650
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f20, 0x1ed5ad0)
UID is 9
CsmaNetDevice:Receive(0x7fa994004160, 0x1ed5ad0)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994004160, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa994004160, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa994004160
UID is 10)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994004160, e6:55:30:a4:21:32, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994004160
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994004160
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994026650, 0x1ed5ad0)
UID is 10
CsmaNetDevice:Receive(0x7fa994003f20, 0x1ed5ad0)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f20, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994003f20
UID is 11)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f20, e6:55:30:a4:21:32, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f20
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f20
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994004160, 0x1ed5ad0)
UID is 11
CsmaNetDevice:Receive(0x7fa994026650, 0x1ed5ad0)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994026650, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa994026650, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa994026650
UID is 12)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994026650, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994026650
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994026650
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f90, 0x1eec6a0)
UID is 12
CsmaNetDevice:Receive(0x7fa994004160, 0x1eec6a0)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994004160, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa994004160, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa994004160
UID is 13)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994004160, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994004160
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994004160
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994026650, 0x1eec6a0)
UID is 13
CsmaNetDevice:Receive(0x7fa994003f90, 0x1eec6a0)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa9940051b0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fa9940051b0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fa9940051b0
UID is 14)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa9940051b0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa9940051b0
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa9940051b0
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994004160, 0x1eec6a0)
UID is 14
CsmaNetDevice:Receive(0x7fa994023b40, 0x1eec6a0)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994023b40, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa994023b40, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa994023b40
UID is 15)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994023b40, e6:55:30:a4:21:32, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994023b40
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994023b40
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994003f20, 0x1ed5ad0)
UID is 15
CsmaNetDevice:Receive(0x7fa994004160, 0x1ed5ad0)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa994004160, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa994004160, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa994004160
UID is 16)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994004160, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994004160
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994004160
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa9940051b0, 0x1eec6a0)
UID is 16
CsmaNetDevice:Receive(0x7fa994003f20, 0x1eec6a0)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()

mininet> h1 ifcon[K[K[K[KCsmaNetDevice:Send(0x7fa994003f20, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa994003f20, 02-06-e6:55:30:a4:21:32, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa994003f20
UID is 17)
Sending From : 02-06-e6:55:30:a4:21:32 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa994003f20, e6:55:30:a4:21:32, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa994003f20
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa994003f20
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994023b40, 0x1ed5ad0)
UID is 17
CsmaNetDevice:Receive(0x7fa9940051b0, 0x1ed5ad0)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is e6:55:30:a4:21:32 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fa9940051b0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fa9940051b0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fa9940051b0
UID is 18)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fa9940051b0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fa9940051b0
UID = 18
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fa9940051b0
Pkt UID is 18)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fa994004160, 0x1eec6a0)
UID is 18
CsmaNetDevice:Receive(0x7fa994023b40, 0x1eec6a0)
UID is 18
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
ifconfig
bash: iifconfig: command not found
mininet> h1 ifconfig
h1-eth0   Link encap:Ethernet  HWaddr e6:55:30:a4:21:32  
          inet addr:7.1.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::e455:30ff:fea4:2132/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:10 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:828 (828.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h2 ifconfig
h2-eth0   Link encap:Ethernet  HWaddr 12:00:00:00:00:01  
          inet addr:7.2.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::1000:ff:fe00:1/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> quit
Ipv4L3Protocol:DoDispose(0x1ed6cf0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x1ed6a90)
Icmpv4L4Protocol:DoDispose(0x1ed6ec0)
Ipv4L3Protocol:DoDispose(0x1ed8950)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x1ed7950)
Icmpv4L4Protocol:DoDispose(0x1ed8b60)
Ipv4L3Protocol:DoDispose(0x1eed7d0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x1eed570)
Icmpv4L4Protocol:DoDispose(0x1eed9a0)
Ipv4L3Protocol:DoDispose(0x1eef430)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x1eee430)
terminate called after throwing an instance of 'std::out_of_range'
Icmpv4L4Protocol:DoDispose(  what():  vector::_M_range_check
0x1eef640)Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x2c27ad0)
CsmaNetDevice:SetMtu(0x2c27ad0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x29b17c0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03bf0)
CsmaNetDevice:SetQueue(0x2c27d40)
CsmaNetDevice:Attach(0x2c27ad0, 0x7ffda7b03ca0)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2c27e70)
CsmaNetDevice:SetMtu(0x2c27e70, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2c27520)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03bf0)
CsmaNetDevice:SetQueue(0x2c283f0)
CsmaNetDevice:Attach(0x2c27e70, 0x7ffda7b03ca0)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2c28a90)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
ArpL3Protocol:SetNode(0x2c28a90, 0x29b17c0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c28cf0)
Ipv4L3Protocol:SetIpForward(0x2c28cf0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c28cf0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
Ipv4L3Protocol:SetNode(0x2c28cf0, 0x29b17c0)
Ipv4L3Protocol:SetupLoopback(0x2c28cf0)
Ipv4L3Protocol:AddIpv4Interface(0x2c28cf0, 0x2c284e0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c28ec0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Icmpv4L4Protocol:SetNode(0x2c28ec0, 0x29b17c0)
Ipv4L3Protocol:Insert(0x2c28cf0, 0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Icmpv4L4Protocol:SetDownTarget(0x2c28ec0, 0x7ffda7b03bc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:SetRoutingProtocol(0x2c28cf0, 0x2c28620)
Ipv4L3Protocol:GetNInterfaces(0x2c28cf0)
Ipv4L3Protocol:IsUp(0x2c28cf0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c28cf0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c28cf0, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c28cf0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:Insert(0x2c28cf0, 0x2c29fe0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
Ipv4L3Protocol:Insert(0x2c28cf0, 0x2c29f70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c28cf0)
ArpL3Protocol:NotifyNewAggregate(0x2c28a90)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c28ec0)
ArpL3Protocol:ArpL3Protocol(0x2c29950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
ArpL3Protocol:SetNode(0x2c29950, 0x2c27520)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c2a950)
Ipv4L3Protocol:SetIpForward(0x2c2a950, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c2a950, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
Ipv4L3Protocol:SetNode(0x2c2a950, 0x2c27520)
Ipv4L3Protocol:SetupLoopback(0x2c2a950)
Ipv4L3Protocol:AddIpv4Interface(0x2c2a950, 0x2c2a090)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c2ab60)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Icmpv4L4Protocol:SetNode(0x2c2ab60, 0x2c27520)
Ipv4L3Protocol:Insert(0x2c2a950, 0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Icmpv4L4Protocol:SetDownTarget(0x2c2ab60, 0x7ffda7b03bc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:SetRoutingProtocol(0x2c2a950, 0x2c2a2d0)
Ipv4L3Protocol:GetNInterfaces(0x2c2a950)
Ipv4L3Protocol:IsUp(0x2c2a950, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c2a950)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:Insert(0x2c2a950, 0x2c2bc20)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
Ipv4L3Protocol:Insert(0x2c2a950, 0x2c2bbb0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c2a950)
ArpL3Protocol:NotifyNewAggregate(0x2c29950)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c2ab60)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c28cf0, 0x2c27ad0)
Ipv4L3Protocol:AddInterface(0x2c28cf0, 0x2c27ad0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2c28a90, 0x2c27ad0, 0x2c2bcd0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffda7b03b40)
Ipv4L3Protocol:AddIpv4Interface(0x2c28cf0, 0x2c2bcd0)
Ipv4L3Protocol:AddAddress(0x2c28cf0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:IsUp(0x2c28cf0, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:SetMetric(0x2c28cf0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:SetUp(0x2c28cf0, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2c28cf0, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetNAddresses(0x2c28cf0, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c2a950, 0x2c27e70)
Ipv4L3Protocol:AddInterface(0x2c2a950, 0x2c27e70)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2c29950, 0x2c27e70, 0x2c2ce00)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffda7b03b40)
Ipv4L3Protocol:AddIpv4Interface(0x2c2a950, 0x2c2ce00)
Ipv4L3Protocol:AddAddress(0x2c2a950, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:IsUp(0x2c2a950, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:SetMetric(0x2c2a950, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:SetUp(0x2c2a950, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2c28cf0)
Ipv4L3Protocol:GetAddress(0x2c2a950, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2c2a950)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03750)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffda7b03750)
CsmaNetDevice:CsmaNetDevice(0x2c3e6a0)
CsmaNetDevice:SetMtu(0x2c3e6a0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2c3e2f0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03bf0)
CsmaNetDevice:SetQueue(0x2c3e8d0)
CsmaNetDevice:Attach(0x2c3e6a0, 0x7ffda7b03ca0)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2c3e9a0)
CsmaNetDevice:SetMtu(0x2c3e9a0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2c3e380)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03bf0)
CsmaNetDevice:SetQueue(0x2c3eef0)
CsmaNetDevice:Attach(0x2c3e9a0, 0x7ffda7b03ca0)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2c3f570)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
ArpL3Protocol:SetNode(0x2c3f570, 0x2c3e2f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c3f7d0)
Ipv4L3Protocol:SetIpForward(0x2c3f7d0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c3f7d0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
Ipv4L3Protocol:SetNode(0x2c3f7d0, 0x2c3e2f0)
Ipv4L3Protocol:SetupLoopback(0x2c3f7d0)
Ipv4L3Protocol:AddIpv4Interface(0x2c3f7d0, 0x2c3efc0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c3f9a0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Icmpv4L4Protocol:SetNode(0x2c3f9a0, 0x2c3e2f0)
Ipv4L3Protocol:Insert(0x2c3f7d0, 0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Icmpv4L4Protocol:SetDownTarget(0x2c3f9a0, 0x7ffda7b03bc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:SetRoutingProtocol(0x2c3f7d0, 0x2c3f100)
Ipv4L3Protocol:GetNInterfaces(0x2c3f7d0)
Ipv4L3Protocol:IsUp(0x2c3f7d0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c3f7d0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c3f7d0, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c3f7d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:Insert(0x2c3f7d0, 0x2c40ac0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
Ipv4L3Protocol:Insert(0x2c3f7d0, 0x2c40a50)
Ipv4L3Protocol:NotifyNewAggregate(0x2c3f7d0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f570)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c3f9a0)
ArpL3Protocol:ArpL3Protocol(0x2c40430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
ArpL3Protocol:SetNode(0x2c40430, 0x2c3e380)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c41430)
Ipv4L3Protocol:SetIpForward(0x2c41430, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c41430, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
Ipv4L3Protocol:SetNode(0x2c41430, 0x2c3e380)
Ipv4L3Protocol:SetupLoopback(0x2c41430)
Ipv4L3Protocol:AddIpv4Interface(0x2c41430, 0x2c40b70)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c41640)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Icmpv4L4Protocol:SetNode(0x2c41640, 0x2c3e380)
Ipv4L3Protocol:Insert(0x2c41430, 0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Icmpv4L4Protocol:SetDownTarget(0x2c41640, 0x7ffda7b03bc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:SetRoutingProtocol(0x2c41430, 0x2c40db0)
Ipv4L3Protocol:GetNInterfaces(0x2c41430)
Ipv4L3Protocol:IsUp(0x2c41430, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetAddress(0x2c41430, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c41430)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:Insert(0x2c41430, 0x2c42700)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
Ipv4L3Protocol:Insert(0x2c41430, 0x2c42690)
Ipv4L3Protocol:NotifyNewAggregate(0x2c41430)
ArpL3Protocol:NotifyNewAggregate(0x2c40430)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c41640)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c3f7d0, 0x2c3e6a0)
Ipv4L3Protocol:AddInterface(0x2c3f7d0, 0x2c3e6a0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2c3f570, 0x2c3e6a0, 0x2c427b0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffda7b03b40)
Ipv4L3Protocol:AddIpv4Interface(0x2c3f7d0, 0x2c427b0)
Ipv4L3Protocol:AddAddress(0x2c3f7d0, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:IsUp(0x2c3f7d0, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:SetMetric(0x2c3f7d0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:SetUp(0x2c3f7d0, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2c3f7d0, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetNAddresses(0x2c3f7d0, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c41430, 0x2c3e9a0)
Ipv4L3Protocol:AddInterface(0x2c41430, 0x2c3e9a0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2c40430, 0x2c3e9a0, 0x2c435e0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffda7b03b40)
Ipv4L3Protocol:AddIpv4Interface(0x2c41430, 0x2c435e0)
Ipv4L3Protocol:AddAddress(0x2c41430, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:IsUp(0x2c41430, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:SetMetric(0x2c41430, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:SetUp(0x2c41430, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2c41430, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2c3f7d0)
Ipv4L3Protocol:GetAddress(0x2c41430, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2c41430)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffda7b03750)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffda7b03750)
ArpL3Protocol:ArpL3Protocol(0x2c3f0a0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
ArpL3Protocol:SetNode(0x2c3f0a0, 0x2c54990)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c54be0)
Ipv4L3Protocol:SetIpForward(0x2c54be0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c54be0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
Ipv4L3Protocol:SetNode(0x2c54be0, 0x2c54990)
Ipv4L3Protocol:SetupLoopback(0x2c54be0)
Ipv4L3Protocol:AddIpv4Interface(0x2c54be0, 0x2c3e5a0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c26a00)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Icmpv4L4Protocol:SetNode(0x2c26a00, 0x2c54990)
Ipv4L3Protocol:Insert(0x2c54be0, 0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Icmpv4L4Protocol:SetDownTarget(0x2c26a00, 0x7ffda7b03bd0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:SetRoutingProtocol(0x2c54be0, 0x2c42970)
Ipv4L3Protocol:GetNInterfaces(0x2c54be0)
Ipv4L3Protocol:IsUp(0x2c54be0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetAddress(0x2c54be0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c54be0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:Insert(0x2c54be0, 0x2c55d40)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:Insert(0x2c54be0, 0x2c55fb0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c54be0)
ArpL3Protocol:NotifyNewAggregate(0x2c3f0a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c26a00)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c54be0, 0x2c566f0)
Ipv4L3Protocol:AddInterface(0x2c54be0, 0x2c566f0)
Ipv4L3Protocol:AddIpv4Interface(0x2c54be0, 0x2c55df0)
Ipv4L3Protocol:AddAddress(0x2c54be0, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:IsUp(0x2c54be0, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:SetMetric(0x2c54be0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:SetUp(0x2c54be0, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
ArpL3Protocol:ArpL3Protocol(0x2c5a8a0)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
ArpL3Protocol:SetNode(0x2c5a8a0, 0x2c571d0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2c5ad80)
Ipv4L3Protocol:SetIpForward(0x2c5ad80, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2c5ad80, 1)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
Ipv4L3Protocol:SetNode(0x2c5ad80, 0x2c571d0)
Ipv4L3Protocol:SetupLoopback(0x2c5ad80)
Ipv4L3Protocol:AddIpv4Interface(0x2c5ad80, 0x2c59c80)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2c5aa70)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Icmpv4L4Protocol:SetNode(0x2c5aa70, 0x2c571d0)
Ipv4L3Protocol:Insert(0x2c5ad80, 0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Icmpv4L4Protocol:SetDownTarget(0x2c5aa70, 0x7ffda7b03130)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:SetRoutingProtocol(0x2c5ad80, 0x2c5a640)
Ipv4L3Protocol:GetNInterfaces(0x2c5ad80)
Ipv4L3Protocol:IsUp(0x2c5ad80, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetNAddresses(0x2c5ad80, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 0, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetNAddresses(0x2c5ad80, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 0)
Ipv4L3Protocol:GetNInterfaces(0x2c5ad80)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:Insert(0x2c5ad80, 0x2c5c030)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:Insert(0x2c5ad80, 0x2c5bfc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c5ad80, 0x2c5c9b0)
Ipv4L3Protocol:AddInterface(0x2c5ad80, 0x2c5c9b0)
Ipv4L3Protocol:AddIpv4Interface(0x2c5ad80, 0x2c5d370)
Ipv4L3Protocol:AddAddress(0x2c5ad80, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:IsUp(0x2c5ad80, 1)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:SetMetric(0x2c5ad80, 1, 1)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:SetUp(0x2c5ad80, 1)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetNAddresses(0x2c5ad80, 1)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetNAddresses(0x2c5ad80, 1)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c54be0, 0x2c5cca0)
Ipv4L3Protocol:AddInterface(0x2c54be0, 0x2c5cca0)
Ipv4L3Protocol:AddIpv4Interface(0x2c54be0, 0x2c5d7f0)
Ipv4L3Protocol:AddAddress(0x2c54be0, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:IsUp(0x2c54be0, 2)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:SetMetric(0x2c54be0, 2, 1)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:SetUp(0x2c54be0, 2)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 2)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetNAddresses(0x2c54be0, 2)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:GetAddress(0x2c5ad80, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c5ad80, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x2c5ad80)
ArpL3Protocol:NotifyNewAggregate(0x2c5a8a0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2c5aa70)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c2a950, 0x2c60b20)
Ipv4L3Protocol:AddInterface(0x2c2a950, 0x2c60b20)
Ipv4L3Protocol:AddIpv4Interface(0x2c2a950, 0x2c64400)
Ipv4L3Protocol:AddAddress(0x2c2a950, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:IsUp(0x2c2a950, 2)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:SetMetric(0x2c2a950, 2, 1)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:SetUp(0x2c2a950, 2)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 2)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 2)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c41430, 0x2c63d60)
Ipv4L3Protocol:AddInterface(0x2c41430, 0x2c63d60)
Ipv4L3Protocol:AddIpv4Interface(0x2c41430, 0x2c64650)
Ipv4L3Protocol:AddAddress(0x2c41430, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:IsUp(0x2c41430, 2)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:SetMetric(0x2c41430, 2, 1)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:SetUp(0x2c41430, 2)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 2)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 2)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x2c2a950)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2c41430)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Ipv4L3Protocol:GetAddress(0x2c54be0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c54be0, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2c2a950)
Ipv4L3Protocol:GetRoutingProtocol(0x2c28cf0)
Ipv4L3Protocol:GetRoutingProtocol(0x2c41430)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c2a950, 0x2c60b20)
Ipv4L3Protocol:GetNAddresses(0x2c2a950, 2)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetAddress(0x2c2a950, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c2a950, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2c41430, 0x2c63d60)
Ipv4L3Protocol:GetNAddresses(0x2c41430, 2)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
Ipv4L3Protocol:GetAddress(0x2c41430, 2, 0)
Ipv4L3Protocol:GetInterface(0x2c41430, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c28cf0, 0x2c27ad0)
Ipv4L3Protocol:GetNAddresses(0x2c28cf0, 1)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
Ipv4L3Protocol:GetAddress(0x2c28cf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c28cf0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2c3f7d0, 0x2c3e6a0)
Ipv4L3Protocol:GetNAddresses(0x2c3f7d0, 1)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
Ipv4L3Protocol:GetAddress(0x2c3f7d0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2c3f7d0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7fcfcc0015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc0015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc0015d0
UID is 0)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc0015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc0015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc0015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc002910, 0x2c27ad0)
UID is 0
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c27ad0)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc002910, 0x2c3e6a0)
UID is 1
CsmaNetDevice:Receive(0x7fcfcc003f90, 0x2c3e6a0)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc0040d0, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc0040d0, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7fcfcc0040d0
UID is 2)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc0040d0, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc0040d0
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc0040d0
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc0015d0, 0x2c27ad0)
UID is 2
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c27ad0)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc026950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc026950, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc026950
UID is 3)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc026950, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc026950
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc026950
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c27ad0)
UID is 3
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c27ad0)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()




*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7fcfcc025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc025940, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc025940
UID is 4)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc025940, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc025940
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc025940
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c3e6a0)
UID is 4
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c3e6a0)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc0040d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc0040d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc0040d0
UID is 5)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc0040d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc0040d0
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc0040d0
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c3e6a0)
UID is 5
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c3e6a0)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc003f20
UID is 6)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc003f20, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc003f20
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc003f20
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c27ad0)
UID is 6
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c27ad0)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc025940
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc025940, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc025940
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc025940
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c27ad0)
UID is 7
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c27ad0)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc026950, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc026950, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc026950
UID is 8)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc026950, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc026950
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc026950
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c27ad0)
UID is 8
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c27ad0)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc003f20, 02-06-33:33:ff:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:ff:00:00:02, 34525)
packet =0x7fcfcc003f20
UID is 9)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:ff:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc003f20, 12:00:00:00:00:02, 33:33:ff:00:00:02, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc003f20
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc003f20
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c3e6a0)
UID is 9
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c3e6a0)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:ff:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc025940
UID is 10)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc025940, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc025940
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc025940
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c27ad0)
UID is 10
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c27ad0)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc0040d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc0040d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc0040d0
UID is 11)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc0040d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc0040d0
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc0040d0
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c3e6a0)
UID is 11
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c3e6a0)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc026950, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc026950, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc026950
UID is 12)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc026950, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc026950
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc026950
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c3e6a0)
UID is 12
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c3e6a0)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7fcfcc003f20
UID is 13)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc003f20
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc003f20
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c3e6a0)
UID is 13
CsmaNetDevice:Receive(0x7fcfcc0040d0, 0x2c3e6a0)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc026950, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc026950, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc026950
UID is 14)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc026950, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc026950
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc026950
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c27ad0)
UID is 14
CsmaNetDevice:Receive(0x7fcfcc0048e0, 0x2c27ad0)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7fcfcc0048e0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc0048e0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc0048e0
UID is 15)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc0048e0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc0048e0
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc0048e0
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c3e6a0)
UID is 15
CsmaNetDevice:Receive(0x7fcfcc025940, 0x2c3e6a0)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
h1 ifcCsmaNetDevice:Send(0x7fcfcc025940, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc025940
UID is 16)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc025940, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc025940
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc025940
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c27ad0)
UID is 16
CsmaNetDevice:Receive(0x7fcfcc003f20, 0x2c27ad0)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
onfig
h1-eth0   Link encap:Ethernet  HWaddr 12:00:00:00:00:01  
          inet addr:7.1.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::1000:ff:fe00:1/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> CsmaNetDevice:Send(0x7fcfcc003f20, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7fcfcc003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7fcfcc003f20
UID is 17)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7fcfcc003f20, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7fcfcc003f20
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7fcfcc003f20
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7fcfcc0048e0, 0x2c3e6a0)
UID is 17
CsmaNetDevice:Receive(0x7fcfcc026950, 0x2c3e6a0)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
h2 ifconfig
h2-eth0   Link encap:Ethernet  HWaddr 12:00:00:00:00:02  
          inet addr:7.2.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::1000:ff:fe00:2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h1 ping h2.PI[K[KI[K[K[K[K-c2 h2.IP()
bash: syntax error near unexpected token `('
mininet> h1 ping -c2 h2.IP()[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kprint h1.P[KIP()
*** Unknown command: print h1.IP()
mininet> print h1.IP()[C[C(h1.IP()[C[C[C[C[C[C[C)
*** Unknown command: print (h1.IP())
mininet> p[Kh2.Node.IP()
> main
bash: syntax error near unexpected token `main'
mininet> quit[K[K[K[Kprint h2.IP()
*** Unknown command: print h2.IP()
mininet> h1.cmd( 'print ' %s[K[K[K[Kh1.IP()')
bash: syntax error near unexpected token `'print h1.IP()''
mininet> quit
Ipv4L3Protocol:DoDispose(0x2c28cf0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2c28a90)
Icmpv4L4Protocol:DoDispose(0x2c28ec0)
Ipv4L3Protocol:DoDispose(0x2c2a950)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2c29950)
Icmpv4L4Protocol:DoDispose(0x2c2ab60)
Ipv4L3Protocol:DoDispose(0x2c3f7d0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2c3f570)
Icmpv4L4Protocol:DoDispose(0x2c3f9a0)
Ipv4L3Protocol:DoDispose(0x2c41430)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2c40430)
Icmpv4L4Protocol:DoDispose(0x2c41640)
Ipv4L3Protocol:DoDispose(0x2c54be0)
ArpL3Protocol:DoDispose(terminate called after throwing an instance of 'std::bad_alloc'
0x2c3f0a0  what():  std::bad_alloc
)
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x2a7ab50)
CsmaNetDevice:SetMtu(0x2a7ab50, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2805ab0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d2090)
CsmaNetDevice:SetQueue(0x2a7ada0)
CsmaNetDevice:Attach(0x2a7ab50, 0x7ffc9f0d2140)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2a7aed0)
CsmaNetDevice:SetMtu(0x2a7aed0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2a7a750)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d2090)
CsmaNetDevice:SetQueue(0x2a7b450)
CsmaNetDevice:Attach(0x2a7aed0, 0x7ffc9f0d2140)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2a7baf0)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
ArpL3Protocol:SetNode(0x2a7baf0, 0x2805ab0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2a7bd50)
Ipv4L3Protocol:SetIpForward(0x2a7bd50, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2a7bd50, 1)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
Ipv4L3Protocol:SetNode(0x2a7bd50, 0x2805ab0)
Ipv4L3Protocol:SetupLoopback(0x2a7bd50)
Ipv4L3Protocol:AddIpv4Interface(0x2a7bd50, 0x2a7b540)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2a7bf20)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Icmpv4L4Protocol:SetNode(0x2a7bf20, 0x2805ab0)
Ipv4L3Protocol:Insert(0x2a7bd50, 0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Icmpv4L4Protocol:SetDownTarget(0x2a7bf20, 0x7ffc9f0d2060)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:SetRoutingProtocol(0x2a7bd50, 0x2a7b680)
Ipv4L3Protocol:GetNInterfaces(0x2a7bd50)
Ipv4L3Protocol:IsUp(0x2a7bd50, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetNAddresses(0x2a7bd50, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetNAddresses(0x2a7bd50, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 0)
Ipv4L3Protocol:GetNInterfaces(0x2a7bd50)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:Insert(0x2a7bd50, 0x2a7d040)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
Ipv4L3Protocol:Insert(0x2a7bd50, 0x2a7cfd0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7bd50)
ArpL3Protocol:NotifyNewAggregate(0x2a7baf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7bf20)
ArpL3Protocol:ArpL3Protocol(0x2a7c9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
ArpL3Protocol:SetNode(0x2a7c9b0, 0x2a7a750)
Ipv4L3Protocol:Ipv4L3Protocol(0x2a7d9b0)
Ipv4L3Protocol:SetIpForward(0x2a7d9b0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2a7d9b0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
Ipv4L3Protocol:SetNode(0x2a7d9b0, 0x2a7a750)
Ipv4L3Protocol:SetupLoopback(0x2a7d9b0)
Ipv4L3Protocol:AddIpv4Interface(0x2a7d9b0, 0x2a7d0f0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2a7dbc0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Icmpv4L4Protocol:SetNode(0x2a7dbc0, 0x2a7a750)
Ipv4L3Protocol:Insert(0x2a7d9b0, 0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Icmpv4L4Protocol:SetDownTarget(0x2a7dbc0, 0x7ffc9f0d2060)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:SetRoutingProtocol(0x2a7d9b0, 0x2a7d330)
Ipv4L3Protocol:GetNInterfaces(0x2a7d9b0)
Ipv4L3Protocol:IsUp(0x2a7d9b0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2a7d9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:Insert(0x2a7d9b0, 0x2a7ec80)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
Ipv4L3Protocol:Insert(0x2a7d9b0, 0x2a7ec10)
Ipv4L3Protocol:NotifyNewAggregate(0x2a7d9b0)
ArpL3Protocol:NotifyNewAggregate(0x2a7c9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a7dbc0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a7bd50, 0x2a7ab50)
Ipv4L3Protocol:AddInterface(0x2a7bd50, 0x2a7ab50)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2a7baf0, 0x2a7ab50, 0x2a7ed30)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc9f0d1fe0)
Ipv4L3Protocol:AddIpv4Interface(0x2a7bd50, 0x2a7ed30)
Ipv4L3Protocol:AddAddress(0x2a7bd50, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:IsUp(0x2a7bd50, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:SetMetric(0x2a7bd50, 1, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:SetUp(0x2a7bd50, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2a7bd50, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetNAddresses(0x2a7bd50, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a7d9b0, 0x2a7aed0)
Ipv4L3Protocol:AddInterface(0x2a7d9b0, 0x2a7aed0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2a7c9b0, 0x2a7aed0, 0x2a7fe60)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc9f0d1fe0)
Ipv4L3Protocol:AddIpv4Interface(0x2a7d9b0, 0x2a7fe60)
Ipv4L3Protocol:AddAddress(0x2a7d9b0, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:IsUp(0x2a7d9b0, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:SetMetric(0x2a7d9b0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:SetUp(0x2a7d9b0, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2a7bd50)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2a7d9b0)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d1bf0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffc9f0d1bf0)
CsmaNetDevice:CsmaNetDevice(0x2a91700)
CsmaNetDevice:SetMtu(0x2a91700, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2a91350)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d2090)
CsmaNetDevice:SetQueue(0x2a91930)
CsmaNetDevice:Attach(0x2a91700, 0x7ffc9f0d2140)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2a91a00)
CsmaNetDevice:SetMtu(0x2a91a00, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2a913e0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d2090)
CsmaNetDevice:SetQueue(0x2a91f50)
CsmaNetDevice:Attach(0x2a91a00, 0x7ffc9f0d2140)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2a925d0)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
ArpL3Protocol:SetNode(0x2a925d0, 0x2a91350)
Ipv4L3Protocol:Ipv4L3Protocol(0x2a92830)
Ipv4L3Protocol:SetIpForward(0x2a92830, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2a92830, 1)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
Ipv4L3Protocol:SetNode(0x2a92830, 0x2a91350)
Ipv4L3Protocol:SetupLoopback(0x2a92830)
Ipv4L3Protocol:AddIpv4Interface(0x2a92830, 0x2a92020)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2a92a00)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Icmpv4L4Protocol:SetNode(0x2a92a00, 0x2a91350)
Ipv4L3Protocol:Insert(0x2a92830, 0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Icmpv4L4Protocol:SetDownTarget(0x2a92a00, 0x7ffc9f0d2060)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:SetRoutingProtocol(0x2a92830, 0x2a92160)
Ipv4L3Protocol:GetNInterfaces(0x2a92830)
Ipv4L3Protocol:IsUp(0x2a92830, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetNAddresses(0x2a92830, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetAddress(0x2a92830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetNAddresses(0x2a92830, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 0)
Ipv4L3Protocol:GetNInterfaces(0x2a92830)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:Insert(0x2a92830, 0x2a93b20)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
Ipv4L3Protocol:Insert(0x2a92830, 0x2a93ab0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a92830)
ArpL3Protocol:NotifyNewAggregate(0x2a925d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a92a00)
ArpL3Protocol:ArpL3Protocol(0x2a93490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
ArpL3Protocol:SetNode(0x2a93490, 0x2a913e0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2a94490)
Ipv4L3Protocol:SetIpForward(0x2a94490, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2a94490, 1)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
Ipv4L3Protocol:SetNode(0x2a94490, 0x2a913e0)
Ipv4L3Protocol:SetupLoopback(0x2a94490)
Ipv4L3Protocol:AddIpv4Interface(0x2a94490, 0x2a93bd0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2a946a0)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Icmpv4L4Protocol:SetNode(0x2a946a0, 0x2a913e0)
Ipv4L3Protocol:Insert(0x2a94490, 0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Icmpv4L4Protocol:SetDownTarget(0x2a946a0, 0x7ffc9f0d2060)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:SetRoutingProtocol(0x2a94490, 0x2a93e10)
Ipv4L3Protocol:GetNInterfaces(0x2a94490)
Ipv4L3Protocol:IsUp(0x2a94490, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetAddress(0x2a94490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 0)
Ipv4L3Protocol:GetNInterfaces(0x2a94490)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:Insert(0x2a94490, 0x2a95760)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
Ipv4L3Protocol:Insert(0x2a94490, 0x2a956f0)
Ipv4L3Protocol:NotifyNewAggregate(0x2a94490)
ArpL3Protocol:NotifyNewAggregate(0x2a93490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a946a0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a92830, 0x2a91700)
Ipv4L3Protocol:AddInterface(0x2a92830, 0x2a91700)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2a925d0, 0x2a91700, 0x2a95810)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc9f0d1fe0)
Ipv4L3Protocol:AddIpv4Interface(0x2a92830, 0x2a95810)
Ipv4L3Protocol:AddAddress(0x2a92830, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:IsUp(0x2a92830, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:SetMetric(0x2a92830, 1, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:SetUp(0x2a92830, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2a92830, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetNAddresses(0x2a92830, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a94490, 0x2a91a00)
Ipv4L3Protocol:AddInterface(0x2a94490, 0x2a91a00)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2a93490, 0x2a91a00, 0x2a96640)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffc9f0d1fe0)
Ipv4L3Protocol:AddIpv4Interface(0x2a94490, 0x2a96640)
Ipv4L3Protocol:AddAddress(0x2a94490, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:IsUp(0x2a94490, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:SetMetric(0x2a94490, 1, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:SetUp(0x2a94490, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2a94490, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2a92830)
Ipv4L3Protocol:GetAddress(0x2a94490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2a94490)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffc9f0d1bf0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffc9f0d1bf0)
ArpL3Protocol:ArpL3Protocol(0x2a92100)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
ArpL3Protocol:SetNode(0x2a92100, 0x2aa79f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2aa7c40)
Ipv4L3Protocol:SetIpForward(0x2aa7c40, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2aa7c40, 1)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
Ipv4L3Protocol:SetNode(0x2aa7c40, 0x2aa79f0)
Ipv4L3Protocol:SetupLoopback(0x2aa7c40)
Ipv4L3Protocol:AddIpv4Interface(0x2aa7c40, 0x2a91600)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2a78c10)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Icmpv4L4Protocol:SetNode(0x2a78c10, 0x2aa79f0)
Ipv4L3Protocol:Insert(0x2aa7c40, 0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Icmpv4L4Protocol:SetDownTarget(0x2a78c10, 0x7ffc9f0d2070)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:SetRoutingProtocol(0x2aa7c40, 0x2a959d0)
Ipv4L3Protocol:GetNInterfaces(0x2aa7c40)
Ipv4L3Protocol:IsUp(0x2aa7c40, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 0)
Ipv4L3Protocol:GetNInterfaces(0x2aa7c40)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:Insert(0x2aa7c40, 0x2aa8da0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:Insert(0x2aa7c40, 0x2aa9010)
Ipv4L3Protocol:NotifyNewAggregate(0x2aa7c40)
ArpL3Protocol:NotifyNewAggregate(0x2a92100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2a78c10)
Ipv4L3Protocol:GetInterfaceForDevice(0x2aa7c40, 0x2aa9750)
Ipv4L3Protocol:AddInterface(0x2aa7c40, 0x2aa9750)
Ipv4L3Protocol:AddIpv4Interface(0x2aa7c40, 0x2aa8e50)
Ipv4L3Protocol:AddAddress(0x2aa7c40, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:IsUp(0x2aa7c40, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:SetMetric(0x2aa7c40, 1, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:SetUp(0x2aa7c40, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
ArpL3Protocol:ArpL3Protocol(0x2aad900)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
ArpL3Protocol:SetNode(0x2aad900, 0x2aaa230)
Ipv4L3Protocol:Ipv4L3Protocol(0x2aadde0)
Ipv4L3Protocol:SetIpForward(0x2aadde0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2aadde0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
Ipv4L3Protocol:SetNode(0x2aadde0, 0x2aaa230)
Ipv4L3Protocol:SetupLoopback(0x2aadde0)
Ipv4L3Protocol:AddIpv4Interface(0x2aadde0, 0x2aacce0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2aadad0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Icmpv4L4Protocol:SetNode(0x2aadad0, 0x2aaa230)
Ipv4L3Protocol:Insert(0x2aadde0, 0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Icmpv4L4Protocol:SetDownTarget(0x2aadad0, 0x7ffc9f0d15d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:SetRoutingProtocol(0x2aadde0, 0x2aad6a0)
Ipv4L3Protocol:GetNInterfaces(0x2aadde0)
Ipv4L3Protocol:IsUp(0x2aadde0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetNAddresses(0x2aadde0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetAddress(0x2aadde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetNAddresses(0x2aadde0, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2aadde0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:Insert(0x2aadde0, 0x2aaf090)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:Insert(0x2aadde0, 0x2aaf020)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:GetInterfaceForDevice(0x2aadde0, 0x2aafa10)
Ipv4L3Protocol:AddInterface(0x2aadde0, 0x2aafa10)
Ipv4L3Protocol:AddIpv4Interface(0x2aadde0, 0x2ab03d0)
Ipv4L3Protocol:AddAddress(0x2aadde0, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:IsUp(0x2aadde0, 1)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:SetMetric(0x2aadde0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:SetUp(0x2aadde0, 1)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetNAddresses(0x2aadde0, 1)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetNAddresses(0x2aadde0, 1)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x2aa7c40, 0x2aafd00)
Ipv4L3Protocol:AddInterface(0x2aa7c40, 0x2aafd00)
Ipv4L3Protocol:AddIpv4Interface(0x2aa7c40, 0x2ab0850)
Ipv4L3Protocol:AddAddress(0x2aa7c40, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:IsUp(0x2aa7c40, 2)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:SetMetric(0x2aa7c40, 2, 1)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:SetUp(0x2aa7c40, 2)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 2)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetNAddresses(0x2aa7c40, 2)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:GetAddress(0x2aadde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aadde0, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x2aadde0)
ArpL3Protocol:NotifyNewAggregate(0x2aad900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2aadad0)
Ipv4L3Protocol:GetInterfaceForDevice(0x2a7d9b0, 0x2ab3b80)
Ipv4L3Protocol:AddInterface(0x2a7d9b0, 0x2ab3b80)
Ipv4L3Protocol:AddIpv4Interface(0x2a7d9b0, 0x2ab7460)
Ipv4L3Protocol:AddAddress(0x2a7d9b0, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:IsUp(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:SetMetric(0x2a7d9b0, 2, 1)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:SetUp(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2a94490, 0x2ab6dc0)
Ipv4L3Protocol:AddInterface(0x2a94490, 0x2ab6dc0)
Ipv4L3Protocol:AddIpv4Interface(0x2a94490, 0x2ab76b0)
Ipv4L3Protocol:AddAddress(0x2a94490, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:IsUp(0x2a94490, 2)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:SetMetric(0x2a94490, 2, 1)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:SetUp(0x2a94490, 2)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 2)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 2)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x2a7d9b0)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2a94490)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Ipv4L3Protocol:GetAddress(0x2aa7c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2aa7c40, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2a7d9b0)
Ipv4L3Protocol:GetRoutingProtocol(0x2a7bd50)
Ipv4L3Protocol:GetRoutingProtocol(0x2a94490)
Ipv4L3Protocol:GetInterfaceForDevice(0x2a7d9b0, 0x2ab3b80)
Ipv4L3Protocol:GetNAddresses(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetAddress(0x2a7d9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a7d9b0, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2a94490, 0x2ab6dc0)
Ipv4L3Protocol:GetNAddresses(0x2a94490, 2)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
Ipv4L3Protocol:GetAddress(0x2a94490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2a94490, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a7bd50, 0x2a7ab50)
Ipv4L3Protocol:GetNAddresses(0x2a7bd50, 1)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
Ipv4L3Protocol:GetAddress(0x2a7bd50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a7bd50, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2a92830, 0x2a91700)
Ipv4L3Protocol:GetNAddresses(0x2a92830, 1)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
Ipv4L3Protocol:GetAddress(0x2a92830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2a92830, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7f60f40015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f40015d0
UID is 0)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4002910, 0x2a7ab50)
UID is 0
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4002910, 0x2a91700)
UID is 1
CsmaNetDevice:Receive(0x7f60f4003f90, 0x2a91700)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4015170, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4015170, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4015170
UID is 2)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4015170, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4015170
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4015170
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a91700)
UID is 2
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a91700)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4025950, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4025950
UID is 3)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4025950, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4025950
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4025950
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 3
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-ff:ff:ff:ff:ff:ff, 2054)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:01, 02-06-ff:ff:ff:ff:ff:ff, 2054)
packet =0x7f60f4003f20
UID is 4)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-ff:ff:ff:ff:ff:ff
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:01, ff:ff:ff:ff:ff:ff, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a7ab50)
UID is 4
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is ff:ff:ff:ff:ff:ff
CsmaNetDevice:GetAddress()
ArpL3Protocol:Receive(0x2a7c9b0, 0x2a7aed0, 46, 2054, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
ARP: received packet of size 46
ArpL3Protocol:FindCache(0x2a7c9b0, 0x2a7aed0)
ARP: received request node=1, got request from 7.1.0.3 for address 7.2.0.3; we have addresses: 
7.1.0.2, 
node=1, got request from 7.1.0.3 for unknown address 7.2.0.3 -- drop
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f40015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f40015d0
UID is 6)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a91700)
UID is 6
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a91700)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4025950, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4025950
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4025950, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4025950
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4025950
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 7
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a7ab50)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4015170, 02-06-33:33:ff:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4015170, 02-06-12:00:00:00:00:02, 02-06-33:33:ff:00:00:02, 34525)
packet =0x7f60f4015170
UID is 8)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:ff:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4015170, 12:00:00:00:00:02, 33:33:ff:00:00:02, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4015170
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4015170
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a91700)
UID is 8
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a91700)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:ff:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7f60f4003f20
UID is 9)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a7ab50)
UID is 9
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f40015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f40015d0
UID is 10)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a91700)
UID is 10
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a91700)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4025950, 02-06-ff:ff:ff:ff:ff:ff, 2054)
CsmaNetDevice:SendFrom(0x7f60f4025950, 02-06-12:00:00:00:00:01, 02-06-ff:ff:ff:ff:ff:ff, 2054)
packet =0x7f60f4025950
UID is 11)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-ff:ff:ff:ff:ff:ff
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4025950, 12:00:00:00:00:01, ff:ff:ff:ff:ff:ff, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4025950
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4025950
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 11
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a7ab50)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is ff:ff:ff:ff:ff:ff
CsmaNetDevice:GetAddress()
ArpL3Protocol:Receive(0x2a7c9b0, 0x2a7aed0, 46, 2054, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
ARP: received packet of size 46
ArpL3Protocol:FindCache(0x2a7c9b0, 0x2a7aed0)
ARP: received request node=1, got request from 7.1.0.3 for address 7.2.0.3; we have addresses: 
7.1.0.2, 
node=1, got request from 7.1.0.3 for unknown address 7.2.0.3 -- drop
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4015170, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4015170, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4015170
UID is 13)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4015170, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4015170
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4015170
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a91700)
UID is 13
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a91700)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f4003f20
UID is 14)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a91700)
UID is 14
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a91700)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f40015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f40015d0
UID is 15)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a7ab50)
UID is 15
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a7ab50)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4015170, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4015170, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f4015170
UID is 16)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4015170, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4015170
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4015170
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 16
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a7ab50)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4025950, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4025950, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4025950
UID is 17)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4025950, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4025950
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4025950
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a91700)
UID is 17
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a91700)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f40015d0, 02-06-ff:ff:ff:ff:ff:ff, 2054)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:01, 02-06-ff:ff:ff:ff:ff:ff, 2054)
packet =0x7f60f40015d0
UID is 18)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-ff:ff:ff:ff:ff:ff
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:01, ff:ff:ff:ff:ff:ff, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 18
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 18)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a7ab50)
UID is 18
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 18
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is ff:ff:ff:ff:ff:ff
CsmaNetDevice:GetAddress()
ArpL3Protocol:Receive(0x2a7c9b0, 0x2a7aed0, 46, 2054, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
ARP: received packet of size 46
ArpL3Protocol:FindCache(0x2a7c9b0, 0x2a7aed0)
ARP: received request node=1, got request from 7.1.0.3 for address 7.2.0.3; we have addresses: 
7.1.0.2, 
node=1, got request from 7.1.0.3 for unknown address 7.2.0.3 -- drop
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f60f4003f20
UID is 20)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 20
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 20)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 20
CsmaNetDevice:Receive(0x7f60f4015170, 0x2a7ab50)
UID is 20
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
PING 7.2.0.3 (7.2.0.3) 56(84) bytes of data.
From 7.1.0.3 icmp_seq=1 Destination Host Unreachable

--- 7.2.0.3 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms






*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7f60f40015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f40015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f40015d0
UID is 21)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f40015d0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f40015d0
UID = 21
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f40015d0
Pkt UID is 21)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a91700)
UID is 21
CsmaNetDevice:Receive(0x7f60f4024390, 0x2a91700)
UID is 21
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4024390, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4024390, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f4024390
UID is 22)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4024390, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4024390
UID = 22
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4024390
Pkt UID is 22)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a7ab50)
UID is 22
CsmaNetDevice:Receive(0x7f60f4025950, 0x2a7ab50)
UID is 22
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4025950, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4025950, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f4025950
UID is 23)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4025950, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4025950
UID = 23
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4025950
Pkt UID is 23)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a91700)
UID is 23
CsmaNetDevice:Receive(0x7f60f4003f20, 0x2a91700)
UID is 23
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f60f4003f20, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f60f4003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f60f4003f20
UID is 24)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f60f4003f20, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f60f4003f20
UID = 24
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f60f4003f20
Pkt UID is 24)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f60f4024390, 0x2a7ab50)
UID is 24
CsmaNetDevice:Receive(0x7f60f40015d0, 0x2a7ab50)
UID is 24
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
quit
Ipv4L3Protocol:DoDispose(0x2a7bd50)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2a7baf0)
Icmpv4L4Protocol:DoDispose(0x2a7bf20)
Ipv4L3Protocol:DoDispose(0x2a7d9b0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2a7c9b0)
Icmpv4L4Protocol:DoDispose(0x2a7dbc0)
Ipv4L3Protocol:DoDispose(0x2a92830)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2a925d0)
Icmpv4L4Protocol:DoDispose(0x2a92a00)
Ipv4L3Protocol:DoDispose(0x2a94490)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2a93490)
Icmpv4L4Protocol:DoDispose(0x2a946a0)
terminate called after throwing an instance of 'std::out_of_range'
Ipv4L3Protocol:DoDispose(0x2aa7c40)
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x2af9ab0)
CsmaNetDevice:SetMtu(0x2af9ab0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2884780)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3e450)
CsmaNetDevice:SetQueue(0x2af9d20)
CsmaNetDevice:Attach(0x2af9ab0, 0x7fffe6f3e500)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2af9ea0)
CsmaNetDevice:SetMtu(0x2af9ea0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x27dda80)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3e450)
CsmaNetDevice:SetQueue(0x2afa450)
CsmaNetDevice:Attach(0x2af9ea0, 0x7fffe6f3e500)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2afaaf0)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
ArpL3Protocol:SetNode(0x2afaaf0, 0x2884780)
Ipv4L3Protocol:Ipv4L3Protocol(0x2afad50)
Ipv4L3Protocol:SetIpForward(0x2afad50, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2afad50, 1)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
Ipv4L3Protocol:SetNode(0x2afad50, 0x2884780)
Ipv4L3Protocol:SetupLoopback(0x2afad50)
Ipv4L3Protocol:AddIpv4Interface(0x2afad50, 0x2afa540)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2afaf20)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Icmpv4L4Protocol:SetNode(0x2afaf20, 0x2884780)
Ipv4L3Protocol:Insert(0x2afad50, 0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Icmpv4L4Protocol:SetDownTarget(0x2afaf20, 0x7fffe6f3e420)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:SetRoutingProtocol(0x2afad50, 0x2afa680)
Ipv4L3Protocol:GetNInterfaces(0x2afad50)
Ipv4L3Protocol:IsUp(0x2afad50, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetNAddresses(0x2afad50, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetAddress(0x2afad50, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetNAddresses(0x2afad50, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 0)
Ipv4L3Protocol:GetNInterfaces(0x2afad50)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:Insert(0x2afad50, 0x2afc040)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
Ipv4L3Protocol:Insert(0x2afad50, 0x2afbfd0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afad50)
ArpL3Protocol:NotifyNewAggregate(0x2afaaf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afaf20)
ArpL3Protocol:ArpL3Protocol(0x2afb9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
ArpL3Protocol:SetNode(0x2afb9b0, 0x27dda80)
Ipv4L3Protocol:Ipv4L3Protocol(0x2afc9b0)
Ipv4L3Protocol:SetIpForward(0x2afc9b0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2afc9b0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
Ipv4L3Protocol:SetNode(0x2afc9b0, 0x27dda80)
Ipv4L3Protocol:SetupLoopback(0x2afc9b0)
Ipv4L3Protocol:AddIpv4Interface(0x2afc9b0, 0x2afc0f0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2afcbc0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Icmpv4L4Protocol:SetNode(0x2afcbc0, 0x27dda80)
Ipv4L3Protocol:Insert(0x2afc9b0, 0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Icmpv4L4Protocol:SetDownTarget(0x2afcbc0, 0x7fffe6f3e420)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:SetRoutingProtocol(0x2afc9b0, 0x2afc330)
Ipv4L3Protocol:GetNInterfaces(0x2afc9b0)
Ipv4L3Protocol:IsUp(0x2afc9b0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2afc9b0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:Insert(0x2afc9b0, 0x2afdc80)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
Ipv4L3Protocol:Insert(0x2afc9b0, 0x2afdc10)
Ipv4L3Protocol:NotifyNewAggregate(0x2afc9b0)
ArpL3Protocol:NotifyNewAggregate(0x2afb9b0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2afcbc0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2afad50, 0x2af9ab0)
Ipv4L3Protocol:AddInterface(0x2afad50, 0x2af9ab0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2afaaf0, 0x2af9ab0, 0x2afdd30)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7fffe6f3e3a0)
Ipv4L3Protocol:AddIpv4Interface(0x2afad50, 0x2afdd30)
Ipv4L3Protocol:AddAddress(0x2afad50, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:IsUp(0x2afad50, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:SetMetric(0x2afad50, 1, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:SetUp(0x2afad50, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2afad50, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetNAddresses(0x2afad50, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2afc9b0, 0x2af9ea0)
Ipv4L3Protocol:AddInterface(0x2afc9b0, 0x2af9ea0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2afb9b0, 0x2af9ea0, 0x2afee60)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7fffe6f3e3a0)
Ipv4L3Protocol:AddIpv4Interface(0x2afc9b0, 0x2afee60)
Ipv4L3Protocol:AddAddress(0x2afc9b0, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:IsUp(0x2afc9b0, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:SetMetric(0x2afc9b0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:SetUp(0x2afc9b0, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2afad50)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2afc9b0)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3dfb0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7fffe6f3dfb0)
CsmaNetDevice:CsmaNetDevice(0x2b10700)
CsmaNetDevice:SetMtu(0x2b10700, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2b10350)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3e450)
CsmaNetDevice:SetQueue(0x2b10930)
CsmaNetDevice:Attach(0x2b10700, 0x7fffe6f3e500)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x2b10a00)
CsmaNetDevice:SetMtu(0x2b10a00, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x2b103e0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3e450)
CsmaNetDevice:SetQueue(0x2b10f50)
CsmaNetDevice:Attach(0x2b10a00, 0x7fffe6f3e500)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x2b115d0)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
ArpL3Protocol:SetNode(0x2b115d0, 0x2b10350)
Ipv4L3Protocol:Ipv4L3Protocol(0x2b11830)
Ipv4L3Protocol:SetIpForward(0x2b11830, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2b11830, 1)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
Ipv4L3Protocol:SetNode(0x2b11830, 0x2b10350)
Ipv4L3Protocol:SetupLoopback(0x2b11830)
Ipv4L3Protocol:AddIpv4Interface(0x2b11830, 0x2b11020)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2b11a00)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Icmpv4L4Protocol:SetNode(0x2b11a00, 0x2b10350)
Ipv4L3Protocol:Insert(0x2b11830, 0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Icmpv4L4Protocol:SetDownTarget(0x2b11a00, 0x7fffe6f3e420)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:SetRoutingProtocol(0x2b11830, 0x2b11160)
Ipv4L3Protocol:GetNInterfaces(0x2b11830)
Ipv4L3Protocol:IsUp(0x2b11830, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetNAddresses(0x2b11830, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetAddress(0x2b11830, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetNAddresses(0x2b11830, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 0)
Ipv4L3Protocol:GetNInterfaces(0x2b11830)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:Insert(0x2b11830, 0x2b12b20)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
Ipv4L3Protocol:Insert(0x2b11830, 0x2b12ab0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b11830)
ArpL3Protocol:NotifyNewAggregate(0x2b115d0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b11a00)
ArpL3Protocol:ArpL3Protocol(0x2b12490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
ArpL3Protocol:SetNode(0x2b12490, 0x2b103e0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2b13490)
Ipv4L3Protocol:SetIpForward(0x2b13490, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2b13490, 1)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
Ipv4L3Protocol:SetNode(0x2b13490, 0x2b103e0)
Ipv4L3Protocol:SetupLoopback(0x2b13490)
Ipv4L3Protocol:AddIpv4Interface(0x2b13490, 0x2b12bd0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2b136a0)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Icmpv4L4Protocol:SetNode(0x2b136a0, 0x2b103e0)
Ipv4L3Protocol:Insert(0x2b13490, 0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Icmpv4L4Protocol:SetDownTarget(0x2b136a0, 0x7fffe6f3e420)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:SetRoutingProtocol(0x2b13490, 0x2b12e10)
Ipv4L3Protocol:GetNInterfaces(0x2b13490)
Ipv4L3Protocol:IsUp(0x2b13490, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetAddress(0x2b13490, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 0)
Ipv4L3Protocol:GetNInterfaces(0x2b13490)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:Insert(0x2b13490, 0x2b14760)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
Ipv4L3Protocol:Insert(0x2b13490, 0x2b146f0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b13490)
ArpL3Protocol:NotifyNewAggregate(0x2b12490)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b136a0)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2b11830, 0x2b10700)
Ipv4L3Protocol:AddInterface(0x2b11830, 0x2b10700)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2b115d0, 0x2b10700, 0x2b14810)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7fffe6f3e3a0)
Ipv4L3Protocol:AddIpv4Interface(0x2b11830, 0x2b14810)
Ipv4L3Protocol:AddAddress(0x2b11830, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:IsUp(0x2b11830, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:SetMetric(0x2b11830, 1, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:SetUp(0x2b11830, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2b11830, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetNAddresses(0x2b11830, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2b13490, 0x2b10a00)
Ipv4L3Protocol:AddInterface(0x2b13490, 0x2b10a00)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x2b12490, 0x2b10a00, 0x2b15640)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7fffe6f3e3a0)
Ipv4L3Protocol:AddIpv4Interface(0x2b13490, 0x2b15640)
Ipv4L3Protocol:AddAddress(0x2b13490, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:IsUp(0x2b13490, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:SetMetric(0x2b13490, 1, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:SetUp(0x2b13490, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x2b13490, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2b11830)
Ipv4L3Protocol:GetAddress(0x2b13490, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x2b13490)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7fffe6f3dfb0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7fffe6f3dfb0)
ArpL3Protocol:ArpL3Protocol(0x2b11100)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
ArpL3Protocol:SetNode(0x2b11100, 0x2b269f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x2b26c40)
Ipv4L3Protocol:SetIpForward(0x2b26c40, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2b26c40, 1)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
Ipv4L3Protocol:SetNode(0x2b26c40, 0x2b269f0)
Ipv4L3Protocol:SetupLoopback(0x2b26c40)
Ipv4L3Protocol:AddIpv4Interface(0x2b26c40, 0x2b10600)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2af8a90)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Icmpv4L4Protocol:SetNode(0x2af8a90, 0x2b269f0)
Ipv4L3Protocol:Insert(0x2b26c40, 0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Icmpv4L4Protocol:SetDownTarget(0x2af8a90, 0x7fffe6f3e430)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:SetRoutingProtocol(0x2b26c40, 0x2b149d0)
Ipv4L3Protocol:GetNInterfaces(0x2b26c40)
Ipv4L3Protocol:IsUp(0x2b26c40, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 0)
Ipv4L3Protocol:GetNInterfaces(0x2b26c40)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:Insert(0x2b26c40, 0x2b27da0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:Insert(0x2b26c40, 0x2b28010)
Ipv4L3Protocol:NotifyNewAggregate(0x2b26c40)
ArpL3Protocol:NotifyNewAggregate(0x2b11100)
Icmpv4L4Protocol:NotifyNewAggregate(0x2af8a90)
Ipv4L3Protocol:GetInterfaceForDevice(0x2b26c40, 0x2b28750)
Ipv4L3Protocol:AddInterface(0x2b26c40, 0x2b28750)
Ipv4L3Protocol:AddIpv4Interface(0x2b26c40, 0x2b27e50)
Ipv4L3Protocol:AddAddress(0x2b26c40, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:IsUp(0x2b26c40, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:SetMetric(0x2b26c40, 1, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:SetUp(0x2b26c40, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
ArpL3Protocol:ArpL3Protocol(0x2b2c900)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
ArpL3Protocol:SetNode(0x2b2c900, 0x2b29230)
Ipv4L3Protocol:Ipv4L3Protocol(0x2b2cde0)
Ipv4L3Protocol:SetIpForward(0x2b2cde0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x2b2cde0, 1)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
Ipv4L3Protocol:SetNode(0x2b2cde0, 0x2b29230)
Ipv4L3Protocol:SetupLoopback(0x2b2cde0)
Ipv4L3Protocol:AddIpv4Interface(0x2b2cde0, 0x2b2bce0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x2b2cad0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Icmpv4L4Protocol:SetNode(0x2b2cad0, 0x2b29230)
Ipv4L3Protocol:Insert(0x2b2cde0, 0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Icmpv4L4Protocol:SetDownTarget(0x2b2cad0, 0x7fffe6f3d990)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:SetRoutingProtocol(0x2b2cde0, 0x2b2c6a0)
Ipv4L3Protocol:GetNInterfaces(0x2b2cde0)
Ipv4L3Protocol:IsUp(0x2b2cde0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetNAddresses(0x2b2cde0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetNAddresses(0x2b2cde0, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 0)
Ipv4L3Protocol:GetNInterfaces(0x2b2cde0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:Insert(0x2b2cde0, 0x2b2e090)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:Insert(0x2b2cde0, 0x2b2e020)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:GetInterfaceForDevice(0x2b2cde0, 0x2b2ea10)
Ipv4L3Protocol:AddInterface(0x2b2cde0, 0x2b2ea10)
Ipv4L3Protocol:AddIpv4Interface(0x2b2cde0, 0x2b2f3d0)
Ipv4L3Protocol:AddAddress(0x2b2cde0, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:IsUp(0x2b2cde0, 1)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:SetMetric(0x2b2cde0, 1, 1)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:SetUp(0x2b2cde0, 1)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetNAddresses(0x2b2cde0, 1)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetNAddresses(0x2b2cde0, 1)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x2b26c40, 0x2b2ed00)
Ipv4L3Protocol:AddInterface(0x2b26c40, 0x2b2ed00)
Ipv4L3Protocol:AddIpv4Interface(0x2b26c40, 0x2b2f850)
Ipv4L3Protocol:AddAddress(0x2b26c40, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:IsUp(0x2b26c40, 2)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:SetMetric(0x2b26c40, 2, 1)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:SetUp(0x2b26c40, 2)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 2)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetNAddresses(0x2b26c40, 2)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:GetAddress(0x2b2cde0, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b2cde0, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x2b2cde0)
ArpL3Protocol:NotifyNewAggregate(0x2b2c900)
Icmpv4L4Protocol:NotifyNewAggregate(0x2b2cad0)
Ipv4L3Protocol:GetInterfaceForDevice(0x2afc9b0, 0x2b32b80)
Ipv4L3Protocol:AddInterface(0x2afc9b0, 0x2b32b80)
Ipv4L3Protocol:AddIpv4Interface(0x2afc9b0, 0x2b36460)
Ipv4L3Protocol:AddAddress(0x2afc9b0, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:IsUp(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:SetMetric(0x2afc9b0, 2, 1)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:SetUp(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2b13490, 0x2b35dc0)
Ipv4L3Protocol:AddInterface(0x2b13490, 0x2b35dc0)
Ipv4L3Protocol:AddIpv4Interface(0x2b13490, 0x2b366b0)
Ipv4L3Protocol:AddAddress(0x2b13490, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:IsUp(0x2b13490, 2)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:SetMetric(0x2b13490, 2, 1)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:SetUp(0x2b13490, 2)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 2)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 2)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x2afc9b0)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2b13490)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Ipv4L3Protocol:GetAddress(0x2b26c40, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b26c40, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x2afc9b0)
Ipv4L3Protocol:GetRoutingProtocol(0x2afad50)
Ipv4L3Protocol:GetRoutingProtocol(0x2b13490)
Ipv4L3Protocol:GetInterfaceForDevice(0x2afc9b0, 0x2b32b80)
Ipv4L3Protocol:GetNAddresses(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetAddress(0x2afc9b0, 2, 0)
Ipv4L3Protocol:GetInterface(0x2afc9b0, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x2b13490, 0x2b35dc0)
Ipv4L3Protocol:GetNAddresses(0x2b13490, 2)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
Ipv4L3Protocol:GetAddress(0x2b13490, 2, 0)
Ipv4L3Protocol:GetInterface(0x2b13490, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2afad50, 0x2af9ab0)
Ipv4L3Protocol:GetNAddresses(0x2afad50, 1)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
Ipv4L3Protocol:GetAddress(0x2afad50, 1, 0)
Ipv4L3Protocol:GetInterface(0x2afad50, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x2b11830, 0x2b10700)
Ipv4L3Protocol:GetNAddresses(0x2b11830, 1)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
Ipv4L3Protocol:GetAddress(0x2b11830, 1, 0)
Ipv4L3Protocol:GetInterface(0x2b11830, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7faa7c0015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0015d0
UID is 0)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c002910, 0x2af9ab0)
UID is 0
CsmaNetDevice:Receive(0x7faa7c003f20, 0x2af9ab0)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c002910, 0x2b10700)
UID is 1
CsmaNetDevice:Receive(0x7faa7c003f90, 0x2b10700)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0269e0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0269e0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0269e0
UID is 2)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0269e0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0269e0
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0269e0
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0015d0, 0x2af9ab0)
UID is 2
CsmaNetDevice:Receive(0x7faa7c024100, 0x2af9ab0)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
12:00:00:00:00:01




*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7faa7c024100, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c024100, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c024100
UID is 3)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c024100, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c024100
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c024100
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c003f20, 0x2b10700)
UID is 3
CsmaNetDevice:Receive(0x7faa7c0015d0, 0x2b10700)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0242f0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0242f0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0242f0
UID is 4)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0242f0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0242f0
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0242f0
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2af9ab0)
UID is 4
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2af9ab0)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c023af0, 02-06-33:33:ff:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c023af0, 02-06-12:00:00:00:00:02, 02-06-33:33:ff:00:00:02, 34525)
packet =0x7faa7c023af0
UID is 5)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:ff:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c023af0, 12:00:00:00:00:02, 33:33:ff:00:00:02, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c023af0
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c023af0
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c024100, 0x2b10700)
UID is 5
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2b10700)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:ff:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0269e0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0269e0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0269e0
UID is 6)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0269e0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0269e0
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0269e0
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2b10700)
UID is 6
CsmaNetDevice:Receive(0x7faa7c024100, 0x2b10700)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c024100, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7faa7c024100, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7faa7c024100
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c024100, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c024100
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c024100
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0242f0, 0x2af9ab0)
UID is 7
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2af9ab0)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c023af0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c023af0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c023af0
UID is 8)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c023af0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c023af0
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c023af0
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2b10700)
UID is 8
CsmaNetDevice:Receive(0x7faa7c0242f0, 0x2b10700)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0242f0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0242f0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c0242f0
UID is 9)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0242f0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0242f0
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0242f0
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2b10700)
UID is 9
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2b10700)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0269e0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0269e0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0269e0
UID is 10)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0269e0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0269e0
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0269e0
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c024100, 0x2af9ab0)
UID is 10
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2af9ab0)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c023af0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c023af0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c023af0
UID is 11)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c023af0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c023af0
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c023af0
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2af9ab0)
UID is 11
CsmaNetDevice:Receive(0x7faa7c024100, 0x2af9ab0)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c024100, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c024100, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c024100
UID is 12)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c024100, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c024100
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c024100
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2af9ab0)
UID is 12
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2af9ab0)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0269e0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0269e0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7faa7c0269e0
UID is 13)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0269e0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0269e0
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0269e0
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0242f0, 0x2b10700)
UID is 13
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2b10700)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c023af0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c023af0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c023af0
UID is 14)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c023af0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c023af0
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c023af0
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2b10700)
UID is 14
CsmaNetDevice:Receive(0x7faa7c0242f0, 0x2b10700)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0242f0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0242f0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c0242f0
UID is 15)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0242f0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0242f0
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0242f0
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c024100, 0x2af9ab0)
UID is 15
CsmaNetDevice:Receive(0x7faa7c0269e0, 0x2af9ab0)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c0269e0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c0269e0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c0269e0
UID is 16)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c0269e0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c0269e0
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c0269e0
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2b10700)
UID is 16
CsmaNetDevice:Receive(0x7faa7c024100, 0x2b10700)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7faa7c024100, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7faa7c024100, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7faa7c024100
UID is 17)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7faa7c024100, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7faa7c024100
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7faa7c024100
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7faa7c0242f0, 0x2af9ab0)
UID is 17
CsmaNetDevice:Receive(0x7faa7c023af0, 0x2af9ab0)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
print h1.MAC()
*** Unknown command: print h1.MAC()
mininet> quit
Ipv4L3Protocol:DoDispose(0x2afad50)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2afaaf0)
Icmpv4L4Protocol:DoDispose(0x2afaf20)
Ipv4L3Protocol:DoDispose(0x2afc9b0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2afb9b0)
Icmpv4L4Protocol:DoDispose(0x2afcbc0)
Ipv4L3Protocol:DoDispose(0x2b11830)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x2b115d0)
Icmpv4L4Protocol:DoDispose(0x2b11a00)
Ipv4L3Protocol:DoDispose(0x2b13490)
CsmaNetDevice:DoDispose()
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
ArpL3ProtocolAborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
*** defaultIntf: warning: h1 has no interfaces
Host h1 has IP address
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 569, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 435, in LteNetwork
    print "Host", h1.name, "has IP address", h1.IP(), "and MAC address", h1.MAC()
  File "build/bdist.linux-x86_64/egg/mininet/node.py", line 543, in IP
AttributeError: 'NoneType' object has no attribute 'IP'
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 569, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 441, in LteNetwork
    ue1 = UeNode(h1,"7.1.0.0","255.255.255.0")
NameError: global name 'h1' is not defined
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 569, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 441, in LteNetwork
    ue1 = UeNode(hosts[0],"7.1.0.0","255.255.255.0")
TypeError: 'Host' object does not support indexing
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 576, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 445, in LteNetwork
    netAddressList.append(str1+i+str3)
TypeError: cannot concatenate 'str' and 'int' objects
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.0
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.0
7.2.0.0
7.3.0.0
7.4.0.0
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.0
7.2.0.0
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> if xo[K[K[K[K[Kh1 [K[K[Kh1[K[Kquit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
00:00:00:00:00:01
00:00:00:00:00:02
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
00:00:00:00:00:02
00:00:00:00:00:03
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
00:00:00:00:00:02
00:00:00:00:00:04
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
00:00:00:00:00:02
00:00:00:00:00:04
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
02-06-00:00:00:00:00:02
02-06-00:00:00:00:00:04
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 574, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 451, in LteNetwork
    print ns.internet.Mac48Address.ConvertFrom(ue1.Get(1).GetDevice(0).GetAddress())
AttributeError: 'module' object has no attribute 'Mac48Address'
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
00:00:00:00:00:02
00:00:00:00:00:04
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.0
7.2.0.0
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 578, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 556, in LteNetwork
    print hosts[h].cmd('arp -s %s %s' %(ns3NodesNetAddressList[x],ns3NodesMacAddressList[x]))
TypeError: list indices must be integers, not Host
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> h1 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.2.0.0                  ether   00:00:00:00:00:04   CM                    h1-eth0
7.1.0.0                  ether   00:00:00:00:00:02   CM                    h1-eth0
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0
m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> a[Kh1 arp 
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

m_local=7.1.0.2: Host name lookup failure
bash: 00:00:00:00:00:02: command not found

m_local=7.2.0.2: Host name lookup failure
bash: 00:00:00:00:00:04: command not found

Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
  File "scratch/ns3-lte.py", line 453
    ns3NodesNetAddressList.append(ue1.Get(1).GetObject(ns.internet.Ipv4.GetTypeId()).GetAddress(1,0).GetLocal()))
                                                                                                                ^
SyntaxError: invalid syntax
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches





Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> h1 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h1-eth0
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h1-eth0
mininet> h2 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h2-eth0
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h2-eth0
mininet> h1 ping c[K-c2 7.1.0.[K[K[K[K2.[K[K1.0.2
PING 7.1.0.2 (7.1.0.2) 56(84) bytes of data.
64 bytes from 7.1.0.2: icmp_seq=1 ttl=64 time=5.93 ms
64 bytes from 7.1.0.2: icmp_seq=2 ttl=64 time=1.35 ms

--- 7.1.0.2 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 1.357/3.645/5.934/2.289 ms
mininet> ping [K[K[K[K[Kh1 ping -c2 h2
PING 7.2.0.3 (7.2.0.3) 56(84) bytes of data.
From 7.1.0.3 icmp_seq=1 Destination Host Unreachable
From 7.1.0.3 icmp_seq=2 Destination Host Unreachable

--- 7.2.0.3 ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 1000ms
pipe 2
mininet> j[Kh1 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h1-eth0
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h1-eth0
7.2.0.3                          (incomplete)                              h1-eth0
mininet> quit
*** Stopping 1 controllers
c0 
*** Stopping 0 links

*** Stopping 0 switches

*** Stopping 2 hosts
h1 h2 
*** Done
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
  File "scratch/ns3-lte.py", line 563
    print "Host", hosts[1].name, "has IP address", hosts[1].IP(), "and MAC address", hosts[1].MAC()
        ^
SyntaxError: invalid syntax
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches







Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01
*** Starting CLI:
mininet> h1 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h1-eth0
7.2.0.3                  ether   12:00:00:00:00:02   CM                    h1-eth0
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h1-eth0
mininet> h2 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h2-eth0
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h2-eth0
7.1.0.3                  ether   12:00:00:00:00:01   CM                    h2-eth0
mininet> pin[K[K[Kh1 ping -c2 hs2[K[K2
PING 7.2.0.3 (7.2.0.3) 56(84) bytes of data.

--- 7.2.0.3 ping statistics ---
2 packets transmitted, 0 received, 100% packet loss, time 1008ms

mininet> quit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0xf64e50)
CsmaNetDevice:SetMtu(0xf64e50, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf63300)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2ba0)
CsmaNetDevice:SetQueue(0xf650c0)
CsmaNetDevice:Attach(0xf64e50, 0x7ffefcfe2c50)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0xf651f0)
CsmaNetDevice:SetMtu(0xf651f0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xc6ce20)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2ba0)
CsmaNetDevice:SetQueue(0xf657a0)
CsmaNetDevice:Attach(0xf651f0, 0x7ffefcfe2c50)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0xf65e40)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
ArpL3Protocol:SetNode(0xf65e40, 0xf63300)
Ipv4L3Protocol:Ipv4L3Protocol(0xf660a0)
Ipv4L3Protocol:SetIpForward(0xf660a0, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf660a0, 1)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
Ipv4L3Protocol:SetNode(0xf660a0, 0xf63300)
Ipv4L3Protocol:SetupLoopback(0xf660a0)
Ipv4L3Protocol:AddIpv4Interface(0xf660a0, 0xf65890)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf66270)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Icmpv4L4Protocol:SetNode(0xf66270, 0xf63300)
Ipv4L3Protocol:Insert(0xf660a0, 0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Icmpv4L4Protocol:SetDownTarget(0xf66270, 0x7ffefcfe2b70)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:SetRoutingProtocol(0xf660a0, 0xf659d0)
Ipv4L3Protocol:GetNInterfaces(0xf660a0)
Ipv4L3Protocol:IsUp(0xf660a0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetNAddresses(0xf660a0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetAddress(0xf660a0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetNAddresses(0xf660a0, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 0)
Ipv4L3Protocol:GetNInterfaces(0xf660a0)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:Insert(0xf660a0, 0xf67390)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
Ipv4L3Protocol:Insert(0xf660a0, 0xf67320)
Ipv4L3Protocol:NotifyNewAggregate(0xf660a0)
ArpL3Protocol:NotifyNewAggregate(0xf65e40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf66270)
ArpL3Protocol:ArpL3Protocol(0xf66d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
ArpL3Protocol:SetNode(0xf66d00, 0xc6ce20)
Ipv4L3Protocol:Ipv4L3Protocol(0xf67d00)
Ipv4L3Protocol:SetIpForward(0xf67d00, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf67d00, 1)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
Ipv4L3Protocol:SetNode(0xf67d00, 0xc6ce20)
Ipv4L3Protocol:SetupLoopback(0xf67d00)
Ipv4L3Protocol:AddIpv4Interface(0xf67d00, 0xf67440)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf67f10)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Icmpv4L4Protocol:SetNode(0xf67f10, 0xc6ce20)
Ipv4L3Protocol:Insert(0xf67d00, 0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Icmpv4L4Protocol:SetDownTarget(0xf67f10, 0x7ffefcfe2b70)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:SetRoutingProtocol(0xf67d00, 0xf67680)
Ipv4L3Protocol:GetNInterfaces(0xf67d00)
Ipv4L3Protocol:IsUp(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetNInterfaces(0xf67d00)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:Insert(0xf67d00, 0xf68fd0)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
Ipv4L3Protocol:Insert(0xf67d00, 0xf68f60)
Ipv4L3Protocol:NotifyNewAggregate(0xf67d00)
ArpL3Protocol:NotifyNewAggregate(0xf66d00)
Icmpv4L4Protocol:NotifyNewAggregate(0xf67f10)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf660a0, 0xf64e50)
Ipv4L3Protocol:AddInterface(0xf660a0, 0xf64e50)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf65e40, 0xf64e50, 0xf69080)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffefcfe2af0)
Ipv4L3Protocol:AddIpv4Interface(0xf660a0, 0xf69080)
Ipv4L3Protocol:AddAddress(0xf660a0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:IsUp(0xf660a0, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:SetMetric(0xf660a0, 1, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:SetUp(0xf660a0, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf660a0, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetNAddresses(0xf660a0, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:AddInterface(0xf67d00, 0xf651f0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf66d00, 0xf651f0, 0xf6a1b0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffefcfe2af0)
Ipv4L3Protocol:AddIpv4Interface(0xf67d00, 0xf6a1b0)
Ipv4L3Protocol:AddAddress(0xf67d00, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:IsUp(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:SetMetric(0xf67d00, 1, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:SetUp(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf660a0)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf67d00)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2700)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffefcfe2700)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
7.1.0.2
CsmaNetDevice:GetAddress()
CsmaNetDevice:CsmaNetDevice(0xf7bb30)
CsmaNetDevice:SetMtu(0xf7bb30, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf7b6a0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2ba0)
CsmaNetDevice:SetQueue(0xf7bd60)
CsmaNetDevice:Attach(0xf7bb30, 0x7ffefcfe2c50)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0xf7be50)
CsmaNetDevice:SetMtu(0xf7be50, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0xf7b760)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2ba0)
CsmaNetDevice:SetQueue(0xf7c3a0)
CsmaNetDevice:Attach(0xf7be50, 0x7ffefcfe2c50)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0xf7ca40)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
ArpL3Protocol:SetNode(0xf7ca40, 0xf7b6a0)
Ipv4L3Protocol:Ipv4L3Protocol(0xf7cca0)
Ipv4L3Protocol:SetIpForward(0xf7cca0, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf7cca0, 1)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
Ipv4L3Protocol:SetNode(0xf7cca0, 0xf7b6a0)
Ipv4L3Protocol:SetupLoopback(0xf7cca0)
Ipv4L3Protocol:AddIpv4Interface(0xf7cca0, 0xf7c490)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf7ce70)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Icmpv4L4Protocol:SetNode(0xf7ce70, 0xf7b6a0)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Icmpv4L4Protocol:SetDownTarget(0xf7ce70, 0x7ffefcfe2b70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:SetRoutingProtocol(0xf7cca0, 0xf7c5d0)
Ipv4L3Protocol:GetNInterfaces(0xf7cca0)
Ipv4L3Protocol:IsUp(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetAddress(0xf7cca0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 0)
Ipv4L3Protocol:GetNInterfaces(0xf7cca0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7df90)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
Ipv4L3Protocol:Insert(0xf7cca0, 0xf7df20)
Ipv4L3Protocol:NotifyNewAggregate(0xf7cca0)
ArpL3Protocol:NotifyNewAggregate(0xf7ca40)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7ce70)
ArpL3Protocol:ArpL3Protocol(0xf7d900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
ArpL3Protocol:SetNode(0xf7d900, 0xf7b760)
Ipv4L3Protocol:Ipv4L3Protocol(0xf7e900)
Ipv4L3Protocol:SetIpForward(0xf7e900, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf7e900, 1)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
Ipv4L3Protocol:SetNode(0xf7e900, 0xf7b760)
Ipv4L3Protocol:SetupLoopback(0xf7e900)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xf7e040)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf7eb10)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Icmpv4L4Protocol:SetNode(0xf7eb10, 0xf7b760)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Icmpv4L4Protocol:SetDownTarget(0xf7eb10, 0x7ffefcfe2b70)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:SetRoutingProtocol(0xf7e900, 0xf7e280)
Ipv4L3Protocol:GetNInterfaces(0xf7e900)
Ipv4L3Protocol:IsUp(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetAddress(0xf7e900, 0, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 0)
Ipv4L3Protocol:GetNInterfaces(0xf7e900)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7fbd0)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
Ipv4L3Protocol:Insert(0xf7e900, 0xf7fb60)
Ipv4L3Protocol:NotifyNewAggregate(0xf7e900)
ArpL3Protocol:NotifyNewAggregate(0xf7d900)
Icmpv4L4Protocol:NotifyNewAggregate(0xf7eb10)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7cca0, 0xf7bb30)
Ipv4L3Protocol:AddInterface(0xf7cca0, 0xf7bb30)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf7ca40, 0xf7bb30, 0xf7fc80)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffefcfe2af0)
Ipv4L3Protocol:AddIpv4Interface(0xf7cca0, 0xf7fc80)
Ipv4L3Protocol:AddAddress(0xf7cca0, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:IsUp(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:SetMetric(0xf7cca0, 1, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:SetUp(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xf7be50)
Ipv4L3Protocol:AddInterface(0xf7e900, 0xf7be50)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0xf7d900, 0xf7be50, 0xf80ab0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffefcfe2af0)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xf80ab0)
Ipv4L3Protocol:AddAddress(0xf7e900, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:IsUp(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:SetMetric(0xf7e900, 1, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:SetUp(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf7cca0)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffefcfe2700)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffefcfe2700)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
Ipv4L3Protocol:GetAddress(0xf7e900, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 1)
7.2.0.2
CsmaNetDevice:GetAddress()
ArpL3Protocol:ArpL3Protocol(0xf65970)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
ArpL3Protocol:SetNode(0xf65970, 0xf91d70)
Ipv4L3Protocol:Ipv4L3Protocol(0xf91fd0)
Ipv4L3Protocol:SetIpForward(0xf91fd0, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf91fd0, 1)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
Ipv4L3Protocol:SetNode(0xf91fd0, 0xf91d70)
Ipv4L3Protocol:SetupLoopback(0xf91fd0)
Ipv4L3Protocol:AddIpv4Interface(0xf91fd0, 0xf7b9b0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf92190)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Icmpv4L4Protocol:SetNode(0xf92190, 0xf91d70)
Ipv4L3Protocol:Insert(0xf91fd0, 0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Icmpv4L4Protocol:SetDownTarget(0xf92190, 0x7ffefcfe2b80)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:SetRoutingProtocol(0xf91fd0, 0xf7baa0)
Ipv4L3Protocol:GetNInterfaces(0xf91fd0)
Ipv4L3Protocol:IsUp(0xf91fd0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetAddress(0xf91fd0, 0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 0)
Ipv4L3Protocol:GetNInterfaces(0xf91fd0)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:Insert(0xf91fd0, 0xf932d0)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:Insert(0xf91fd0, 0xf93540)
Ipv4L3Protocol:NotifyNewAggregate(0xf91fd0)
ArpL3Protocol:NotifyNewAggregate(0xf65970)
Icmpv4L4Protocol:NotifyNewAggregate(0xf92190)
Ipv4L3Protocol:GetInterfaceForDevice(0xf91fd0, 0xf93c80)
Ipv4L3Protocol:AddInterface(0xf91fd0, 0xf93c80)
Ipv4L3Protocol:AddIpv4Interface(0xf91fd0, 0xf93380)
Ipv4L3Protocol:AddAddress(0xf91fd0, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:IsUp(0xf91fd0, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:SetMetric(0xf91fd0, 1, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:SetUp(0xf91fd0, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
ArpL3Protocol:ArpL3Protocol(0xf97e30)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
ArpL3Protocol:SetNode(0xf97e30, 0xf94760)
Ipv4L3Protocol:Ipv4L3Protocol(0xf98310)
Ipv4L3Protocol:SetIpForward(0xf98310, 1)
Ipv4L3Protocol:SetWeakEsModel(0xf98310, 1)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
Ipv4L3Protocol:SetNode(0xf98310, 0xf94760)
Ipv4L3Protocol:SetupLoopback(0xf98310)
Ipv4L3Protocol:AddIpv4Interface(0xf98310, 0xf97210)
Icmpv4L4Protocol:Icmpv4L4Protocol(0xf98000)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Icmpv4L4Protocol:SetNode(0xf98000, 0xf94760)
Ipv4L3Protocol:Insert(0xf98310, 0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Icmpv4L4Protocol:SetDownTarget(0xf98000, 0x7ffefcfe20e0)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:SetRoutingProtocol(0xf98310, 0xf97bd0)
Ipv4L3Protocol:GetNInterfaces(0xf98310)
Ipv4L3Protocol:IsUp(0xf98310, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetNAddresses(0xf98310, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetAddress(0xf98310, 0, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetNAddresses(0xf98310, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 0)
Ipv4L3Protocol:GetNInterfaces(0xf98310)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:Insert(0xf98310, 0xf995c0)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:Insert(0xf98310, 0xf99550)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:GetInterfaceForDevice(0xf98310, 0xf99f40)
Ipv4L3Protocol:AddInterface(0xf98310, 0xf99f40)
Ipv4L3Protocol:AddIpv4Interface(0xf98310, 0xf9a900)
Ipv4L3Protocol:AddAddress(0xf98310, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:IsUp(0xf98310, 1)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:SetMetric(0xf98310, 1, 1)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:SetUp(0xf98310, 1)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetNAddresses(0xf98310, 1)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetNAddresses(0xf98310, 1)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0xf91fd0, 0xf9a230)
Ipv4L3Protocol:AddInterface(0xf91fd0, 0xf9a230)
Ipv4L3Protocol:AddIpv4Interface(0xf91fd0, 0xf9ad80)
Ipv4L3Protocol:AddAddress(0xf91fd0, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:IsUp(0xf91fd0, 2)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:SetMetric(0xf91fd0, 2, 1)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:SetUp(0xf91fd0, 2)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 2)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetNAddresses(0xf91fd0, 2)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:GetAddress(0xf98310, 1, 0)
Ipv4L3Protocol:GetInterface(0xf98310, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 2, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 2)
Ipv4L3Protocol:NotifyNewAggregate(0xf98310)
ArpL3Protocol:NotifyNewAggregate(0xf97e30)
Icmpv4L4Protocol:NotifyNewAggregate(0xf98000)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf9e0b0)
Ipv4L3Protocol:AddInterface(0xf67d00, 0xf9e0b0)
Ipv4L3Protocol:AddIpv4Interface(0xf67d00, 0xfa1990)
Ipv4L3Protocol:AddAddress(0xf67d00, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:IsUp(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:SetMetric(0xf67d00, 2, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:SetUp(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xfa12f0)
Ipv4L3Protocol:AddInterface(0xf7e900, 0xfa12f0)
Ipv4L3Protocol:AddIpv4Interface(0xf7e900, 0xfa1be0)
Ipv4L3Protocol:AddAddress(0xf7e900, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:IsUp(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:SetMetric(0xf7e900, 2, 1)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:SetUp(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetRoutingProtocol(0xf67d00)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Ipv4L3Protocol:GetAddress(0xf91fd0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf91fd0, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0xf67d00)
Ipv4L3Protocol:GetRoutingProtocol(0xf660a0)
Ipv4L3Protocol:GetRoutingProtocol(0xf7e900)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf9e0b0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf7e900, 0xfa12f0)
Ipv4L3Protocol:GetNAddresses(0xf7e900, 2)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
Ipv4L3Protocol:GetAddress(0xf7e900, 2, 0)
Ipv4L3Protocol:GetInterface(0xf7e900, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf660a0, 0xf64e50)
Ipv4L3Protocol:GetNAddresses(0xf660a0, 1)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
Ipv4L3Protocol:GetAddress(0xf660a0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf660a0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0xf7cca0, 0xf7bb30)
Ipv4L3Protocol:GetNAddresses(0xf7cca0, 1)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
Ipv4L3Protocol:GetAddress(0xf7cca0, 1, 0)
Ipv4L3Protocol:GetInterface(0xf7cca0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7ff66c0015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c0015d0
UID is 0)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c002910, 0xf64e50)
UID is 0
CsmaNetDevice:Receive(0x7ff66c003f20, 0xf64e50)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c002910, 0xf7bb30)
UID is 1
CsmaNetDevice:Receive(0x7ff66c003f90, 0xf7bb30)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0040d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0040d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c0040d0
UID is 2)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0040d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0040d0
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0040d0
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf64e50)
UID is 2
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()






*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7ff66c025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c025940
UID is 3)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c003f20, 0xf7bb30)
UID is 3
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf7bb30)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0015d0, 02-06-33:33:ff:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:ff:00:00:02, 34525)
packet =0x7ff66c0015d0
UID is 4)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:ff:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0015d0, 12:00:00:00:00:02, 33:33:ff:00:00:02, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0015d0
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0015d0
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf7bb30)
UID is 4
CsmaNetDevice:Receive(0x7ff66c003f20, 0xf7bb30)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:ff:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c003f20, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7ff66c003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7ff66c003f20
UID is 5)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c003f20, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c003f20
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c003f20
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf64e50)
UID is 5
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c025940
UID is 6)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf7bb30)
UID is 6
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf7bb30)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0040d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0040d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c0040d0
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0040d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0040d0
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0040d0
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c003f20, 0xf64e50)
UID is 7
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf64e50)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c0015d0
UID is 8)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0015d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0015d0
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0015d0
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf7bb30)
UID is 8
CsmaNetDevice:Receive(0x7ff66c005100, 0xf7bb30)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c005100, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c005100, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c005100
UID is 9)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c005100, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c005100
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c005100
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf7bb30)
UID is 9
CsmaNetDevice:Receive(0x7ff66c025940, 0xf7bb30)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c025940
UID is 10)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf64e50)
UID is 10
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf64e50)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c0015d0
UID is 11)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0015d0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0015d0
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0015d0
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 11
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf64e50)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0040d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0040d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c0040d0
UID is 12)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0040d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0040d0
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0040d0
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c005100, 0xf7bb30)
UID is 12
CsmaNetDevice:Receive(0x7ff66c025940, 0xf7bb30)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c025940, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7ff66c025940
UID is 13)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0015d0, 0xf64e50)
UID is 13
CsmaNetDevice:Receive(0x7ff66c005100, 0xf64e50)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c015180, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c015180, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c015180
UID is 14)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c015180, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c015180
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c015180
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf7bb30)
UID is 14
CsmaNetDevice:Receive(0x7ff66c005100, 0xf7bb30)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c005100, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c005100, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c005100
UID is 15)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c005100, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c005100
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c005100
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 15
CsmaNetDevice:Receive(0x7ff66c0040d0, 0xf64e50)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
 
mininet> CsmaNetDevice:Send(0x7ff66c0040d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c0040d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c0040d0
UID is 16)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0040d0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0040d0
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0040d0
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c015180, 0xf7bb30)
UID is 16
CsmaNetDevice:Receive(0x7ff66c025940, 0xf7bb30)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c025940, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7ff66c025940
UID is 17)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c005100, 0xf64e50)
UID is 17
CsmaNetDevice:Receive(0x7ff66c015180, 0xf64e50)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()

mininet> h1 ping -c2 7.2.0.[K[K[K[K1.0.2
PING 7.1.0.2 (7.1.0.2) 56(84) bytes of data.
CsmaNetDevice:Send(0x7ff66c0048e0, 02-06-00:00:00:00:00:02, 2048)
CsmaNetDevice:SendFrom(0x7ff66c0048e0, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 2048)
packet =0x7ff66c0048e0
UID is 18)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-00:00:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0048e0, 12:00:00:00:00:01, 00:00:00:00:00:02, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0048e0
UID = 18
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0048e0
Pkt UID is 18)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 18
CsmaNetDevice:Receive(0x7ff66c025420, 0xf64e50)
UID is 18
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 00:00:00:00:00:02
CsmaNetDevice:GetAddress()
Ipv4L3Protocol:Receive(0xf67d00, 0xf651f0, 0x7ff66c025420, 2048, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
Packet from 02-06-12:00:00:00:00:01 received on node 1
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:IsDestinationAddress(0xf67d00, 7.1.0.2, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
For me (destination 7.1.0.2 match)
Ipv4L3Protocol:LocalDeliver(0xf67d00, 0x7ff66c024830, 0x7ff67326fbb0, 1)
Ipv4L3Protocol:GetProtocol(0xf67d00, 1)
Icmpv4L4Protocol:GetProtocolNumber(0xf67f10)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Icmpv4L4Protocol:Receive(0xf67f10, 0x7ff66c025c60, tos 0x0 DSCP Default ECN Not-ECT ttl 64 id 56210 protocol 1 offset (bytes) 0 flags [DF] length: 84 7.1.0.3 > 7.1.0.2, 0xf6a1b0)
Icmpv4L4Protocol:HandleEcho(0xf67f10, 0x7ff66c025c60, type=8, code=0, 7.1.0.3, 7.1.0.2)
Icmpv4L4Protocol:SendMessage(0xf67f10, 0x7ff66c026ff0, 7.1.0.2, 7.1.0.3, 0, 0, 0)
Ipv4L3Protocol:Send(0xf67d00, 0x7ff66c026ff0, 7.1.0.2, 7.1.0.3, 1, 0)
Send From : 7.1.0.2 to : 7.1.0.310
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Testing address 7.1.0.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Testing address 7.0.0.2 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol::Send case 5:  passed in with no route 7.1.0.3
Ipv4L3Protocol:BuildHeader(0xf67d00, 7.1.0.2, 7.1.0.3, 1, 64, 64, 0, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNetDevice(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNetDevice(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:SendRealOut(0xf67d00, 0x7ff66c0261f0, 0x7ff66c026c10, 0x7ff67326f070)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
CsmaNetDevice:GetIfIndex()
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Send to destination 7.1.0.3
CsmaNetDevice:GetMtu()
CsmaNetDevice:NeedsArp()
ArpL3Protocol:Lookup(0xf66d00, 0x7ff66c026c10, 7.1.0.3, 0xf651f0, 0xf6a240, 0x7ff67326e950)
node=1, no entry for 7.1.0.3 -- send arp request
ArpL3Protocol:SendArpRequest(0xf66d00, 0xf6a240, 7.1.0.3)
Ipv4L3Protocol:SelectSourceAddress(0xf67d00, 0xf651f0, 7.1.0.3, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:GetAddress()
ARP: sending request from node 1 || src: 02-06-00:00:00:00:00:02 / 7.1.0.2 || dst: 02-06-ff:ff:ff:ff:ff:ff / 7.1.0.3
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:GetAddress()
CsmaNetDevice:GetBroadcast()
CsmaNetDevice:Send(0x7ff66c025420, 02-06-ff:ff:ff:ff:ff:ff, 2054)
CsmaNetDevice:SendFrom(0x7ff66c025420, 02-06-00:00:00:00:00:02, 02-06-ff:ff:ff:ff:ff:ff, 2054)
packet =0x7ff66c025420
UID is 20)
Sending From : 02-06-00:00:00:00:00:02 To : 02-06-ff:ff:ff:ff:ff:ff
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025420, 00:00:00:00:00:02, ff:ff:ff:ff:ff:ff, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025420
UID = 20
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025420
Pkt UID is 20)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0048e0, 0xf651f0)
UID is 20
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 00:00:00:00:00:02 destination is ff:ff:ff:ff:ff:ff
CsmaNetDevice:Receive(0x7ff66c025940, 0xf651f0)
UID is 20
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7ff66c0274b0, 02-06-00:00:00:00:00:02, 2054)
CsmaNetDevice:SendFrom(0x7ff66c0274b0, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 2054)
packet =0x7ff66c0274b0
UID is 22)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-00:00:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c0274b0, 12:00:00:00:00:01, 00:00:00:00:00:02, 2054)
p->GetSize () = 28
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2054)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c0274b0
UID = 22
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.19e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c0274b0
Pkt UID is 22)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025420, 0xf64e50)
UID is 22
CsmaNetDevice:Receive(0x7ff66c025940, 0xf64e50)
UID is 22
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 00:00:00:00:00:02
CsmaNetDevice:GetAddress()
ArpL3Protocol:Receive(0xf66d00, 0xf651f0, 46, 2054, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
ARP: received packet of size 46
ArpL3Protocol:FindCache(0xf66d00, 0xf651f0)
ARP: received reply node=1, got request from 7.1.0.3 for address 7.1.0.2; we have addresses: 
7.1.0.2, 
CsmaNetDevice:GetAddress()
node=1, got reply from 7.1.0.3 for waiting entry -- flush
CsmaNetDevice:NeedsArp()
ArpL3Protocol:Lookup(0xf66d00, 0x7ff66c026c10, 7.1.0.3, 0xf651f0, 0xf6a240, 0x7ff67326f840)
node=1, alive entry for 7.1.0.3 valid -- send
CsmaNetDevice:Send(0x7ff66c026c10, 00-06-12:00:00:00:00:01, 2048)
CsmaNetDevice:SendFrom(0x7ff66c026c10, 02-06-00:00:00:00:00:02, 00-06-12:00:00:00:00:01, 2048)
packet =0x7ff66c026c10
UID is 19)
Sending From : 02-06-00:00:00:00:00:02 To : 00-06-12:00:00:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c026c10, 00:00:00:00:00:02, 12:00:00:00:00:01, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c026c10
UID = 19
CsmaNetDevice:IsSendEnabled()
Channel busy, backing off for 1e-06 sec
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c026c10
UID = 19
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c026c10
Pkt UID is 19)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c0274b0, 0xf651f0)
UID is 19
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 00:00:00:00:00:02 destination is 12:00:00:00:00:01
CsmaNetDevice:Receive(0x7ff66c025940, 0xf651f0)
UID is 19
CsmaNetDevice:TransmitReadyEvent()
64 bytes from 7.1.0.2: icmp_seq=1 ttl=64 time=18.8 ms
CsmaNetDevice:Send(0x7ff66c025940, 02-06-00:00:00:00:00:02, 2048)
CsmaNetDevice:SendFrom(0x7ff66c025940, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 2048)
packet =0x7ff66c025940
UID is 24)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-00:00:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c025940, 12:00:00:00:00:01, 00:00:00:00:00:02, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c025940
UID = 24
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c025940
Pkt UID is 24)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c026c10, 0xf64e50)
UID is 24
CsmaNetDevice:Receive(0x7ff66c0274b0, 0xf64e50)
UID is 24
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 00:00:00:00:00:02
CsmaNetDevice:GetAddress()
Ipv4L3Protocol:Receive(0xf67d00, 0xf651f0, 0x7ff66c0274b0, 2048, 02-06-12:00:00:00:00:01, 02-06-00:00:00:00:00:02, 0)
Packet from 02-06-12:00:00:00:00:01 received on node 1
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:IsDestinationAddress(0xf67d00, 7.1.0.2, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
For me (destination 7.1.0.2 match)
Ipv4L3Protocol:LocalDeliver(0xf67d00, 0x7ff66c025420, 0x7ff67326fbb0, 1)
Ipv4L3Protocol:GetProtocol(0xf67d00, 1)
Icmpv4L4Protocol:GetProtocolNumber(0xf67f10)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Icmpv4L4Protocol:Receive(0xf67f10, 0x7ff66c0048e0, tos 0x0 DSCP Default ECN Not-ECT ttl 64 id 56329 protocol 1 offset (bytes) 0 flags [DF] length: 84 7.1.0.3 > 7.1.0.2, 0xf6a1b0)
Icmpv4L4Protocol:HandleEcho(0xf67f10, 0x7ff66c0048e0, type=8, code=0, 7.1.0.3, 7.1.0.2)
Icmpv4L4Protocol:SendMessage(0xf67f10, 0x7ff66c025c60, 7.1.0.2, 7.1.0.3, 0, 0, 0)
Ipv4L3Protocol:Send(0xf67d00, 0x7ff66c025c60, 7.1.0.2, 7.1.0.3, 1, 0)
Send From : 7.1.0.2 to : 7.1.0.310
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetAddress(0xf67d00, 0, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 0)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Testing address 7.1.0.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol:GetAddress(0xf67d00, 2, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Testing address 7.0.0.2 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0xf67d00, 2)
Ipv4L3Protocol:GetInterface(0xf67d00, 2)
Ipv4L3Protocol::Send case 5:  passed in with no route 7.1.0.3
Ipv4L3Protocol:BuildHeader(0xf67d00, 7.1.0.2, 7.1.0.3, 1, 64, 64, 0, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNetDevice(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNAddresses(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetAddress(0xf67d00, 1, 0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetNetDevice(0xf67d00, 1)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:SendRealOut(0xf67d00, 0x7ff66c0049a0, 0x7ff66c026950, 0x7ff67326f070)
Ipv4L3Protocol:GetInterfaceForDevice(0xf67d00, 0xf651f0)
Ipv4L3Protocol:GetInterface(0xf67d00, 1)
CsmaNetDevice:GetIfIndex()
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Send to destination 7.1.0.3
CsmaNetDevice:GetMtu()
CsmaNetDevice:NeedsArp()
ArpL3Protocol:Lookup(0xf66d00, 0x7ff66c026950, 7.1.0.3, 0xf651f0, 0xf6a240, 0x7ff67326e950)
node=1, alive entry for 7.1.0.3 valid -- send
CsmaNetDevice:Send(0x7ff66c026950, 00-06-12:00:00:00:00:01, 2048)
CsmaNetDevice:SendFrom(0x7ff66c026950, 02-06-00:00:00:00:00:02, 00-06-12:00:00:00:00:01, 2048)
packet =0x7ff66c026950
UID is 25)
Sending From : 02-06-00:00:00:00:00:02 To : 00-06-12:00:00:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7ff66c026950, 00:00:00:00:00:02, 12:00:00:00:00:01, 2048)
p->GetSize () = 84
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (2048)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c026950
UID = 25
CsmaNetDevice:IsSendEnabled()
Channel busy, backing off for 1e-06 sec
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7ff66c026950
UID = 25
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.89e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7ff66c026950
Pkt UID is 25)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7ff66c025940, 0xf651f0)
UID is 25
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 00:00:00:00:00:02 destination is 12:00:00:00:00:01
CsmaNetDevice:Receive(0x7ff66c0274b0, 0xf651f0)
UID is 25
CsmaNetDevice:TransmitReadyEvent()
64 bytes from 7.1.0.2: icmp_seq=2 ttl=64 time=4.05 ms

--- 7.1.0.2 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 4.053/11.439/18.826/7.387 ms
mininet> quit
Ipv4L3Protocol:DoDispose(0xf660a0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf65e40)
Icmpv4L4Protocol:DoDispose(0xf66270)
Ipv4L3Protocol:DoDispose(0xf67d00)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf66d00)
Icmpv4L4Protocol:DoDispose(0xf67f10)
Ipv4L3Protocol:DoDispose(0xf7cca0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf7ca40)
Icmpv4L4Protocol:DoDispose(0xf7ce70)
Ipv4L3Protocol:DoDispose(0xf7e900)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0xf7d900)
Icmpv4L4Protocol:DoDispose(0xf7eb10)
terminate called after throwing an instance of 'std::out_of_range'
Ipv4L3Protocol:DoDispose(0xf91fd0)
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
CsmaNetDevice:CsmaNetDevice(0x19b2ed0)
CsmaNetDevice:SetMtu(0x19b2ed0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x19b12d0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffe780ffe90)
CsmaNetDevice:SetQueue(0x19b3140)
CsmaNetDevice:Attach(0x19b2ed0, 0x7ffe780fff40)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x19b3270)
CsmaNetDevice:SetMtu(0x19b3270, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x19b27d0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffe780ffe90)
CsmaNetDevice:SetQueue(0x19b37f0)
CsmaNetDevice:Attach(0x19b3270, 0x7ffe780fff40)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x19b3e90)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
ArpL3Protocol:SetNode(0x19b3e90, 0x19b12d0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19b40f0)
Ipv4L3Protocol:SetIpForward(0x19b40f0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19b40f0, 1)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
Ipv4L3Protocol:SetNode(0x19b40f0, 0x19b12d0)
Ipv4L3Protocol:SetupLoopback(0x19b40f0)
Ipv4L3Protocol:AddIpv4Interface(0x19b40f0, 0x19b38e0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19b42c0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Icmpv4L4Protocol:SetNode(0x19b42c0, 0x19b12d0)
Ipv4L3Protocol:Insert(0x19b40f0, 0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Icmpv4L4Protocol:SetDownTarget(0x19b42c0, 0x7ffe780ffe60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:SetRoutingProtocol(0x19b40f0, 0x19b3a20)
Ipv4L3Protocol:GetNInterfaces(0x19b40f0)
Ipv4L3Protocol:IsUp(0x19b40f0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetNAddresses(0x19b40f0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetAddress(0x19b40f0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetNAddresses(0x19b40f0, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 0)
Ipv4L3Protocol:GetNInterfaces(0x19b40f0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:Insert(0x19b40f0, 0x19b53e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
Ipv4L3Protocol:Insert(0x19b40f0, 0x19b5370)
Ipv4L3Protocol:NotifyNewAggregate(0x19b40f0)
ArpL3Protocol:NotifyNewAggregate(0x19b3e90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b42c0)
ArpL3Protocol:ArpL3Protocol(0x19b4d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
ArpL3Protocol:SetNode(0x19b4d50, 0x19b27d0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19b5d50)
Ipv4L3Protocol:SetIpForward(0x19b5d50, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19b5d50, 1)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
Ipv4L3Protocol:SetNode(0x19b5d50, 0x19b27d0)
Ipv4L3Protocol:SetupLoopback(0x19b5d50)
Ipv4L3Protocol:AddIpv4Interface(0x19b5d50, 0x19b5490)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19b5f60)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Icmpv4L4Protocol:SetNode(0x19b5f60, 0x19b27d0)
Ipv4L3Protocol:Insert(0x19b5d50, 0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Icmpv4L4Protocol:SetDownTarget(0x19b5f60, 0x7ffe780ffe60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:SetRoutingProtocol(0x19b5d50, 0x19b56d0)
Ipv4L3Protocol:GetNInterfaces(0x19b5d50)
Ipv4L3Protocol:IsUp(0x19b5d50, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 0, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 0)
Ipv4L3Protocol:GetNInterfaces(0x19b5d50)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:Insert(0x19b5d50, 0x19b7020)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
Ipv4L3Protocol:Insert(0x19b5d50, 0x19b6fb0)
Ipv4L3Protocol:NotifyNewAggregate(0x19b5d50)
ArpL3Protocol:NotifyNewAggregate(0x19b4d50)
Icmpv4L4Protocol:NotifyNewAggregate(0x19b5f60)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19b40f0, 0x19b2ed0)
Ipv4L3Protocol:AddInterface(0x19b40f0, 0x19b2ed0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x19b3e90, 0x19b2ed0, 0x19b70d0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffe780ffde0)
Ipv4L3Protocol:AddIpv4Interface(0x19b40f0, 0x19b70d0)
Ipv4L3Protocol:AddAddress(0x19b40f0, 1, m_local=7.1.0.1; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:IsUp(0x19b40f0, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:SetMetric(0x19b40f0, 1, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:SetUp(0x19b40f0, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x19b40f0, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetNAddresses(0x19b40f0, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19b5d50, 0x19b3270)
Ipv4L3Protocol:AddInterface(0x19b5d50, 0x19b3270)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x19b4d50, 0x19b3270, 0x19b8200)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffe780ffde0)
Ipv4L3Protocol:AddIpv4Interface(0x19b5d50, 0x19b8200)
Ipv4L3Protocol:AddAddress(0x19b5d50, 1, m_local=7.1.0.2; m_mask=255.255.255.0; m_broadcast=7.1.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:IsUp(0x19b5d50, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:SetMetric(0x19b5d50, 1, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:SetUp(0x19b5d50, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x19b40f0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x19b5d50)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffe780ff9f0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffe780ff9f0)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
Ipv4L3Protocol:GetAddress(0x19b5d50, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 1)
7.1.0.2
CsmaNetDevice:GetAddress()
CsmaNetDevice:CsmaNetDevice(0x19c9b80)
CsmaNetDevice:SetMtu(0x19c9b80, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x19c96f0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffe780ffe90)
CsmaNetDevice:SetQueue(0x19c9db0)
CsmaNetDevice:Attach(0x19c9b80, 0x7ffe780fff40)
CsmaNetDevice:NotifyLinkUp()
Link is up
CsmaNetDevice:CsmaNetDevice(0x19c9ea0)
CsmaNetDevice:SetMtu(0x19c9ea0, 1500)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetEncapsulationMode(1)
m_encapMode = 1
m_mtu = 1500
CsmaNetDevice:SetAddress()
CsmaNetDevice:SetNode(0x19c97b0)
CsmaNetDevice:SetIfIndex(0)
CsmaNetDevice:SetReceiveCallback(0x7ffe780ffe90)
CsmaNetDevice:SetQueue(0x19ca3f0)
CsmaNetDevice:Attach(0x19c9ea0, 0x7ffe780fff40)
CsmaNetDevice:NotifyLinkUp()
Link is up
ArpL3Protocol:ArpL3Protocol(0x19caa90)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
ArpL3Protocol:SetNode(0x19caa90, 0x19c96f0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19cacf0)
Ipv4L3Protocol:SetIpForward(0x19cacf0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19cacf0, 1)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
Ipv4L3Protocol:SetNode(0x19cacf0, 0x19c96f0)
Ipv4L3Protocol:SetupLoopback(0x19cacf0)
Ipv4L3Protocol:AddIpv4Interface(0x19cacf0, 0x19ca4e0)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19caec0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Icmpv4L4Protocol:SetNode(0x19caec0, 0x19c96f0)
Ipv4L3Protocol:Insert(0x19cacf0, 0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Icmpv4L4Protocol:SetDownTarget(0x19caec0, 0x7ffe780ffe60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:SetRoutingProtocol(0x19cacf0, 0x19ca620)
Ipv4L3Protocol:GetNInterfaces(0x19cacf0)
Ipv4L3Protocol:IsUp(0x19cacf0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetNAddresses(0x19cacf0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetAddress(0x19cacf0, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetNAddresses(0x19cacf0, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 0)
Ipv4L3Protocol:GetNInterfaces(0x19cacf0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:Insert(0x19cacf0, 0x19cbfe0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
Ipv4L3Protocol:Insert(0x19cacf0, 0x19cbf70)
Ipv4L3Protocol:NotifyNewAggregate(0x19cacf0)
ArpL3Protocol:NotifyNewAggregate(0x19caa90)
Icmpv4L4Protocol:NotifyNewAggregate(0x19caec0)
ArpL3Protocol:ArpL3Protocol(0x19cb950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
ArpL3Protocol:SetNode(0x19cb950, 0x19c97b0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19cc950)
Ipv4L3Protocol:SetIpForward(0x19cc950, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19cc950, 1)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
Ipv4L3Protocol:SetNode(0x19cc950, 0x19c97b0)
Ipv4L3Protocol:SetupLoopback(0x19cc950)
Ipv4L3Protocol:AddIpv4Interface(0x19cc950, 0x19cc090)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19ccb60)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Icmpv4L4Protocol:SetNode(0x19ccb60, 0x19c97b0)
Ipv4L3Protocol:Insert(0x19cc950, 0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Icmpv4L4Protocol:SetDownTarget(0x19ccb60, 0x7ffe780ffe60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:SetRoutingProtocol(0x19cc950, 0x19cc2d0)
Ipv4L3Protocol:GetNInterfaces(0x19cc950)
Ipv4L3Protocol:IsUp(0x19cc950, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetAddress(0x19cc950, 0, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 0)
Ipv4L3Protocol:GetNInterfaces(0x19cc950)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:Insert(0x19cc950, 0x19cdc20)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
Ipv4L3Protocol:Insert(0x19cc950, 0x19cdbb0)
Ipv4L3Protocol:NotifyNewAggregate(0x19cc950)
ArpL3Protocol:NotifyNewAggregate(0x19cb950)
Icmpv4L4Protocol:NotifyNewAggregate(0x19ccb60)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19cacf0, 0x19c9b80)
Ipv4L3Protocol:AddInterface(0x19cacf0, 0x19c9b80)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x19caa90, 0x19c9b80, 0x19cdcd0)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffe780ffde0)
Ipv4L3Protocol:AddIpv4Interface(0x19cacf0, 0x19cdcd0)
Ipv4L3Protocol:AddAddress(0x19cacf0, 1, m_local=7.2.0.1; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:IsUp(0x19cacf0, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:SetMetric(0x19cacf0, 1, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:SetUp(0x19cacf0, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x19cacf0, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetNAddresses(0x19cacf0, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19cc950, 0x19c9ea0)
Ipv4L3Protocol:AddInterface(0x19cc950, 0x19c9ea0)
CsmaNetDevice:NeedsArp()
ArpL3Protocol:CreateCache(0x19cb950, 0x19c9ea0, 0x19ceb00)
CsmaNetDevice:IsBroadcast()
CsmaNetDevice:AddLinkChangeCallback(0x7ffe780ffde0)
Ipv4L3Protocol:AddIpv4Interface(0x19cc950, 0x19ceb00)
Ipv4L3Protocol:AddAddress(0x19cc950, 1, m_local=7.2.0.2; m_mask=255.255.255.0; m_broadcast=7.2.0.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:IsUp(0x19cc950, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:SetMetric(0x19cc950, 1, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:SetUp(0x19cc950, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
CsmaNetDevice:GetMtu()
Ipv4L3Protocol:GetNAddresses(0x19cc950, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x19cacf0)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetRoutingProtocol(0x19cc950)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetReceiveCallback(0x7ffe780ff9f0)
CsmaNetDevice:SetPromiscReceiveCallback(0x7ffe780ff9f0)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
Ipv4L3Protocol:GetAddress(0x19cc950, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 1)
7.2.0.2
CsmaNetDevice:GetAddress()
ArpL3Protocol:ArpL3Protocol(0x19b39c0)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
ArpL3Protocol:SetNode(0x19b39c0, 0x19dfdc0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19e0020)
Ipv4L3Protocol:SetIpForward(0x19e0020, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19e0020, 1)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
Ipv4L3Protocol:SetNode(0x19e0020, 0x19dfdc0)
Ipv4L3Protocol:SetupLoopback(0x19e0020)
Ipv4L3Protocol:AddIpv4Interface(0x19e0020, 0x19c9a00)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19e01e0)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Icmpv4L4Protocol:SetNode(0x19e01e0, 0x19dfdc0)
Ipv4L3Protocol:Insert(0x19e0020, 0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Icmpv4L4Protocol:SetDownTarget(0x19e01e0, 0x7ffe780ffe70)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:SetRoutingProtocol(0x19e0020, 0x19c9af0)
Ipv4L3Protocol:GetNInterfaces(0x19e0020)
Ipv4L3Protocol:IsUp(0x19e0020, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetAddress(0x19e0020, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 0)
Ipv4L3Protocol:GetNInterfaces(0x19e0020)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:Insert(0x19e0020, 0x19e1320)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:Insert(0x19e0020, 0x19e1590)
Ipv4L3Protocol:NotifyNewAggregate(0x19e0020)
ArpL3Protocol:NotifyNewAggregate(0x19b39c0)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e01e0)
Ipv4L3Protocol:GetInterfaceForDevice(0x19e0020, 0x19e1cd0)
Ipv4L3Protocol:AddInterface(0x19e0020, 0x19e1cd0)
Ipv4L3Protocol:AddIpv4Interface(0x19e0020, 0x19e13d0)
Ipv4L3Protocol:AddAddress(0x19e0020, 1, m_local=7.0.0.1; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:IsUp(0x19e0020, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:SetMetric(0x19e0020, 1, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:SetUp(0x19e0020, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
ArpL3Protocol:ArpL3Protocol(0x19e5e80)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
ArpL3Protocol:SetNode(0x19e5e80, 0x19e27b0)
Ipv4L3Protocol:Ipv4L3Protocol(0x19e6360)
Ipv4L3Protocol:SetIpForward(0x19e6360, 1)
Ipv4L3Protocol:SetWeakEsModel(0x19e6360, 1)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
Ipv4L3Protocol:SetNode(0x19e6360, 0x19e27b0)
Ipv4L3Protocol:SetupLoopback(0x19e6360)
Ipv4L3Protocol:AddIpv4Interface(0x19e6360, 0x19e5260)
Icmpv4L4Protocol:Icmpv4L4Protocol(0x19e6050)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Icmpv4L4Protocol:SetNode(0x19e6050, 0x19e27b0)
Ipv4L3Protocol:Insert(0x19e6360, 0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Icmpv4L4Protocol:SetDownTarget(0x19e6050, 0x7ffe780ff3d0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:SetRoutingProtocol(0x19e6360, 0x19e5c20)
Ipv4L3Protocol:GetNInterfaces(0x19e6360)
Ipv4L3Protocol:IsUp(0x19e6360, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetNAddresses(0x19e6360, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetAddress(0x19e6360, 0, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetNAddresses(0x19e6360, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 0)
Ipv4L3Protocol:GetNInterfaces(0x19e6360)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:Insert(0x19e6360, 0x19e7610)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:Insert(0x19e6360, 0x19e75a0)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:GetInterfaceForDevice(0x19e6360, 0x19e7f90)
Ipv4L3Protocol:AddInterface(0x19e6360, 0x19e7f90)
Ipv4L3Protocol:AddIpv4Interface(0x19e6360, 0x19e8950)
Ipv4L3Protocol:AddAddress(0x19e6360, 1, m_local=10.0.0.5; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:IsUp(0x19e6360, 1)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:SetMetric(0x19e6360, 1, 1)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:SetUp(0x19e6360, 1)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetNAddresses(0x19e6360, 1)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetNAddresses(0x19e6360, 1)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x19e0020, 0x19e8280)
Ipv4L3Protocol:AddInterface(0x19e0020, 0x19e8280)
Ipv4L3Protocol:AddIpv4Interface(0x19e0020, 0x19e8dd0)
Ipv4L3Protocol:AddAddress(0x19e0020, 2, m_local=10.0.0.6; m_mask=255.255.255.252; m_broadcast=10.0.0.7; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:IsUp(0x19e0020, 2)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:SetMetric(0x19e0020, 2, 1)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:SetUp(0x19e0020, 2)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 2)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetNAddresses(0x19e0020, 2)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:GetAddress(0x19e6360, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e6360, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 2, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 2)
Ipv4L3Protocol:NotifyNewAggregate(0x19e6360)
ArpL3Protocol:NotifyNewAggregate(0x19e5e80)
Icmpv4L4Protocol:NotifyNewAggregate(0x19e6050)
Ipv4L3Protocol:GetInterfaceForDevice(0x19b5d50, 0x19ec100)
Ipv4L3Protocol:AddInterface(0x19b5d50, 0x19ec100)
Ipv4L3Protocol:AddIpv4Interface(0x19b5d50, 0x19ef9e0)
Ipv4L3Protocol:AddAddress(0x19b5d50, 2, m_local=7.0.0.2; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:IsUp(0x19b5d50, 2)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:SetMetric(0x19b5d50, 2, 1)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:SetUp(0x19b5d50, 2)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 2)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 2)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x19cc950, 0x19ef340)
Ipv4L3Protocol:AddInterface(0x19cc950, 0x19ef340)
Ipv4L3Protocol:AddIpv4Interface(0x19cc950, 0x19efc30)
Ipv4L3Protocol:AddAddress(0x19cc950, 2, m_local=7.0.0.3; m_mask=255.0.0.0; m_broadcast=7.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:IsUp(0x19cc950, 2)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:SetMetric(0x19cc950, 2, 1)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:SetUp(0x19cc950, 2)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 2)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 2)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetRoutingProtocol(0x19b5d50)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Node 1, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x19cc950)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Ipv4L3Protocol:GetAddress(0x19e0020, 1, 0)
Ipv4L3Protocol:GetInterface(0x19e0020, 1)
Node 3, UE default gateway 7.0.0.1 
Ipv4L3Protocol:GetRoutingProtocol(0x19b5d50)
Ipv4L3Protocol:GetRoutingProtocol(0x19b40f0)
Ipv4L3Protocol:GetRoutingProtocol(0x19cc950)
Ipv4L3Protocol:GetInterfaceForDevice(0x19b5d50, 0x19ec100)
Ipv4L3Protocol:GetNAddresses(0x19b5d50, 2)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetAddress(0x19b5d50, 2, 0)
Ipv4L3Protocol:GetInterface(0x19b5d50, 2)
Ipv4L3Protocol:GetInterfaceForDevice(0x19cc950, 0x19ef340)
Ipv4L3Protocol:GetNAddresses(0x19cc950, 2)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
Ipv4L3Protocol:GetAddress(0x19cc950, 2, 0)
Ipv4L3Protocol:GetInterface(0x19cc950, 2)
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19b40f0, 0x19b2ed0)
Ipv4L3Protocol:GetNAddresses(0x19b40f0, 1)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
Ipv4L3Protocol:GetAddress(0x19b40f0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19b40f0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:GetNode()
Ipv4L3Protocol:GetInterfaceForDevice(0x19cacf0, 0x19c9b80)
Ipv4L3Protocol:GetNAddresses(0x19cacf0, 1)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
Ipv4L3Protocol:GetAddress(0x19cacf0, 1, 0)
Ipv4L3Protocol:GetInterface(0x19cacf0, 1)
CsmaNetDevice:GetAddress()
CsmaNetDevice:SetAddress()
CsmaNetDevice:Send(0x7f0a100015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100015d0
UID is 0)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100015d0
UID = 0
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100015d0
Pkt UID is 0)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10002910, 0x19b2ed0)
UID is 0
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19b2ed0)
UID is 0
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a10003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a10003f20
UID is 1)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10003f20, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10003f20
UID = 1
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10003f20
Pkt UID is 1)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10002910, 0x19c9b80)
UID is 1
CsmaNetDevice:Receive(0x7f0a10003f90, 0x19c9b80)
UID is 1
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100037d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100037d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100037d0
UID is 2)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100037d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100037d0
UID = 2
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100037d0
Pkt UID is 2)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19b2ed0)
UID is 2
CsmaNetDevice:Receive(0x7f0a10024460, 0x19b2ed0)
UID is 2
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01



Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02



*** Starting CLI:
mininet> CsmaNetDevice:Send(0x7f0a10024460, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a10024460, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a10024460
UID is 3)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10024460, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10024460
UID = 3
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10024460
Pkt UID is 3)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 3
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19c9b80)
UID is 3
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100015d0
UID is 4)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100015d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100015d0
UID = 4
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100015d0
Pkt UID is 4)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10024460, 0x19c9b80)
UID is 4
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 4
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10003f20, 02-06-33:33:ff:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a10003f20, 02-06-12:00:00:00:00:02, 02-06-33:33:ff:00:00:02, 34525)
packet =0x7f0a10003f20
UID is 5)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:ff:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10003f20, 12:00:00:00:00:02, 33:33:ff:00:00:02, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10003f20
UID = 5
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10003f20
Pkt UID is 5)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19c9b80)
UID is 5
CsmaNetDevice:Receive(0x7f0a10024460, 0x19c9b80)
UID is 5
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:ff:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10024460, 02-06-33:33:ff:00:00:01, 34525)
CsmaNetDevice:SendFrom(0x7f0a10024460, 02-06-12:00:00:00:00:01, 02-06-33:33:ff:00:00:01, 34525)
packet =0x7f0a10024460
UID is 6)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:ff:00:00:01
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10024460, 12:00:00:00:00:01, 33:33:ff:00:00:01, 34525)
p->GetSize () = 64
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10024460
UID = 6
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.52e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10024460
Pkt UID is 6)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19b2ed0)
UID is 6
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19b2ed0)
UID is 6
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:ff:00:00:01
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100015d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100015d0
UID is 7)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100015d0, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100015d0
UID = 7
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100015d0
Pkt UID is 7)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10024460, 0x19b2ed0)
UID is 7
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19b2ed0)
UID is 7
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100037d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100037d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100037d0
UID is 8)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100037d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100037d0
UID = 8
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100037d0
Pkt UID is 8)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 8
CsmaNetDevice:Receive(0x7f0a10024460, 0x19c9b80)
UID is 8
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10024460, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a10024460, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a10024460
UID is 9)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10024460, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10024460
UID = 9
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10024460
Pkt UID is 9)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19c9b80)
UID is 9
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 9
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a10003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a10003f20
UID is 10)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10003f20, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10003f20
UID = 10
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10003f20
Pkt UID is 10)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19b2ed0)
UID is 10
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19b2ed0)
UID is 10
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100037d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a100037d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a100037d0
UID is 11)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100037d0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100037d0
UID = 11
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100037d0
Pkt UID is 11)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19b2ed0)
UID is 11
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19b2ed0)
UID is 11
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100015d0, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a100015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a100015d0
UID is 12)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100015d0, 12:00:00:00:00:02, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100015d0
UID = 12
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100015d0
Pkt UID is 12)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10024460, 0x19c9b80)
UID is 12
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 12
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10003f20, 02-06-33:33:00:00:00:16, 34525)
CsmaNetDevice:SendFrom(0x7f0a10003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:16, 34525)
packet =0x7f0a10003f20
UID is 13)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:16
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10003f20, 12:00:00:00:00:01, 33:33:00:00:00:16, 34525)
p->GetSize () = 76
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10003f20
UID = 13
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.75e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10003f20
Pkt UID is 13)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19b2ed0)
UID is 13
CsmaNetDevice:Receive(0x7f0a10024460, 0x19b2ed0)
UID is 13
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:16
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10002d30, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a10002d30, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a10002d30
UID is 14)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10002d30, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10002d30
UID = 14
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10002d30
Pkt UID is 14)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19c9b80)
UID is 14
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19c9b80)
UID is 14
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100037d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a100037d0, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a100037d0
UID is 15)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100037d0, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100037d0
UID = 15
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100037d0
Pkt UID is 15)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19b2ed0)
UID is 15
CsmaNetDevice:Receive(0x7f0a100015d0, 0x19b2ed0)
UID is 15
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a100015d0, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a100015d0, 02-06-12:00:00:00:00:02, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a100015d0
UID is 16)
Sending From : 02-06-12:00:00:00:00:02 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a100015d0, 12:00:00:00:00:02, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a100015d0
UID = 16
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a100015d0
Pkt UID is 16)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a10002d30, 0x19c9b80)
UID is 16
CsmaNetDevice:Receive(0x7f0a10003f20, 0x19c9b80)
UID is 16
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:02 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()
CsmaNetDevice:Send(0x7f0a10003f20, 02-06-33:33:00:00:00:02, 34525)
CsmaNetDevice:SendFrom(0x7f0a10003f20, 02-06-12:00:00:00:00:01, 02-06-33:33:00:00:00:02, 34525)
packet =0x7f0a10003f20
UID is 17)
Sending From : 02-06-12:00:00:00:00:01 To : 02-06-33:33:00:00:00:02
CsmaNetDevice:IsLinkUp()
CsmaNetDevice:IsSendEnabled()
CsmaNetDevice:AddHeader(0x7f0a10003f20, 12:00:00:00:00:01, 33:33:00:00:00:02, 34525)
p->GetSize () = 56
m_encapMode = 1
m_mtu = 1500
Encapsulating packet as DIX (type interpretation)
header.SetLengthType (34525)
CsmaNetDevice:TransmitStart()
m_currentPkt = 0x7f0a10003f20
UID = 17
CsmaNetDevice:IsSendEnabled()
Schedule TransmitCompleteEvent in 1.37e-07sec
CsmaNetDevice:TransmitCompleteEvent()
m_currentPkt=0x7f0a10003f20
Pkt UID is 17)
CsmaNetDevice:GetNode()
CsmaNetDevice:GetNode()
Schedule TransmitReadyEvent in 2.2e-08sec
CsmaNetDevice:Receive(0x7f0a100037d0, 0x19b2ed0)
UID is 17
CsmaNetDevice:Receive(0x7f0a10002d30, 0x19b2ed0)
UID is 17
CsmaNetDevice:IsReceiveEnabled()
Received, Pkt source is 12:00:00:00:00:01 destination is 33:33:00:00:00:02
CsmaNetDevice:GetAddress()
CsmaNetDevice:TransmitReadyEvent()

mininet> quit
Ipv4L3Protocol:DoDispose(0x19b40f0)
CsmaNetDevice:DoDispose()
ArpL3Protocol:DoDispose(0x19b3e90)
Icmpv4L4Protocol:DoDispose(0x19b42c0)
Ipv4L3Protocol:DoDispose(0x19b5d50)
CsmaNetDevice:DoDispose()
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01



Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02



*** Starting CLI:
mininet> h1 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h1-eth0
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h1-eth0
7.2.0.3                  ether   12:00:00:00:00:02   CM                    h1-eth0
mininet> h2 arp
Address                  HWtype  HWaddress           Flags Mask            Iface
7.2.0.2                  ether   00:00:00:00:00:04   CM                    h2-eth0
7.1.0.2                  ether   00:00:00:00:00:02   CM                    h2-eth0
7.1.0.3                  ether   12:00:00:00:00:01   CM                    h2-eth0
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address None


arp: invalid hardware address

Host h2 has IP address 7.2.0.3 and MAC address None

arp: invalid hardware address


*** Starting CLI:
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address None


arp: invalid hardware address

Host h2 has IP address 7.2.0.3 and MAC address None

arp: invalid hardware address


*** Starting CLI:
mininet> h1 ifconfig
h1-eth0   Link encap:Ethernet  HWaddr b2:72:42:62:28:8a  
          inet addr:7.1.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::b072:42ff:fe62:288a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h2 ifconfig
h2-eth0   Link encap:Ethernet  HWaddr da:f7:42:2f:8f:18  
          inet addr:7.2.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::d8f7:42ff:fe2f:8f18/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h2.MAC()[K[K[K[K[K[K[K[Kprint h1.MAC()
*** Unknown command: print h1.MAC()
mininet> print h1.cmd(h1.MAC())
*** Unknown command: print h1.cmd(h1.MAC())
mininet> print h1.cmd(h1.MAC())[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kquit
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check
Aborted (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01



Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02



*** Starting CLI:
mininet> ifo[Kconfig
*** Unknown command: ifconfig
mininet> h1 ifconfig
h1-eth0   Link encap:Ethernet  HWaddr 12:00:00:00:00:01  
          inet addr:7.1.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::1000:ff:fe00:1/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:668 (668.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h2 ifconfig
h2-eth0   Link encap:Ethernet  HWaddr 12:00:00:00:00:02  
          inet addr:7.2.0.3  Bcast:7.255.255.255  Mask:255.0.0.0
          inet6 addr: fe80::1000:ff:fe00:2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

mininet> h1 ping -c2 7.1.0.1
PING 7.1.0.1 (7.1.0.1) 56(84) bytes of data.
From 7.1.0.3 icmp_seq=1 Destination Host Unreachable
From 7.1.0.3 icmp_seq=2 Destination Host Unreachable

--- 7.1.0.1 ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 1006ms
pipe 2
mininet> h1 ping -c2 7.1.0.1[K2
PING 7.1.0.2 (7.1.0.2) 56(84) bytes of data.
64 bytes from 7.1.0.2: icmp_seq=1 ttl=64 time=5.27 ms
64 bytes from 7.1.0.2: icmp_seq=2 ttl=64 time=0.848 ms

--- 7.1.0.2 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 0.848/3.062/5.277/2.215 ms
mininet> quit
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
  File "scratch/ns3-lte.py", line 572
    *entry = arpcache.Lookup(mininetIPList[x])
    ^
SyntaxError: invalid syntax
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
  File "scratch/ns3-lte.py", line 572
    *entry = arpcache.Lookup(mininetIPList[x])
    ^
SyntaxError: invalid syntax
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01



Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02



Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 592, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 571, in LteNetwork
    arpcache = arpL3.FindCache(netdev)
AttributeError: 'internet.ArpL3Protocol' object has no attribute 'FindCache'
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 50, in <module>
    import ns.arpL3protocol
ImportError: No module named arpL3protocol
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 50, in <module>
    import ns.arpL3protocol
ImportError: No module named arpL3protocol
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 50, in <module>
    import ns.arpL3Protocol
ImportError: No module named arpL3Protocol
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# python scratch/ns3-lte.py 
7.1.0.2
7.2.0.2
Node 1, UE default gateway 7.0.0.1 
Node 3, UE default gateway 7.0.0.1 
*** Configuring hosts
h1 h2 
*** Starting controller
c0 
*** Starting 0 switches

Host h1 has IP address 7.1.0.3 and MAC address 12:00:00:00:00:01



Host h2 has IP address 7.2.0.3 and MAC address 12:00:00:00:00:02



Traceback (most recent call last):
  File "scratch/ns3-lte.py", line 593, in <module>
    LteNetwork()
  File "scratch/ns3-lte.py", line 572, in LteNetwork
    arpcache = arpL3.FindCache(netdev)
AttributeError: 'internet.ArpL3Protocol' object has no attribute 'FindCache'
Segmentation fault (core dumped)
]0;root@lab3930: ~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22root@lab3930:~/Program/Mininet/ns3/ns-allinone-3.22/ns-3.22# exit
exit

Script done on Wed 28 Sep 2016 12:29:28 PM EDT
